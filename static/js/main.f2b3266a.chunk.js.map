{"version":3,"sources":["features/blocks/Note.js","features/blocks/helpers.js","features/blocks/Text.js","features/blocks/Blocks.js","features/HeaderButtons/HeaderButtons.js","features/graph/GraphContextMenu.js","features/graph/Nodes.js","features/graph/SequentialPath.js","features/graph/ConnectionContextMenu.js","features/graph/ConnectionListener.js","features/graph/Connections.js","features/HeaderButtons/DownloadButton.js","App.js","features/graph/Graph.js","reportWebVitals.js","features/blocks/BlocksReducer.js","features/ArgButtons/ArgButtonsSlice.js","app/store.js","index.js"],"names":["Note","id","note","useSelector","state","blocks","present","notes","view","views","dispatch","useDispatch","undefined","class","onSelect","type","payload","onChange","onClick","e","ctrlKey","metaKey","shiftKey","value","ToggleNoteButton","checked","uncheckedIcon","checkedIcon","className","onColor","onHandleColor","offColor","boxShadow","activeBoxShadow","height","width","splitState","caret","getSelection","getAnchorOffset","end","getCurrentContent","getPlainText","length","currentBlockKey","getAnchorKey","lastBlockKey","getLastBlock","key","firstBlockKey","getFirstBlock","selectionSlice1","SelectionState","createEmpty","merge","anchorKey","anchorOffset","focusOffset","focusKey","selectionSlice2","contentSlice2","Modifier","removeRange","contentSlice1","slice1","JSON","stringify","convertToRaw","slice2","getSelectionInfo","selection","flag","getFocusOffset","getFocusKey","isBackward","styleMap","TANNA","color","AMORA","AMORA_MIDRASH","STAM","STAM_MIDRASH","CLEAR","TextField","txt","txts","reduxEditorState","EditorState","createWithContent","convertFromRaw","parse","useState","localEditorState","setEditorState","console","log","domEditor","useEffect","element","document","activeElement","getAttribute","parentElement","focus","ref","customStyleMap","editorState","justSelection","split","Blocks","order","map","MergeButton","onMouseDown","event","preventDefault","SplitButton","RedoButton","ActionCreators","redo","UndoButton","undo","HistoricalLayerButton","props","selections","data-style","dataStyle","onMouseUp","style","currentTarget","contentState","newSelectionState","createSelection","newEditorState","acceptSelection","removeInlineStyles","RichUtils","toggleInlineStyle","name","HeaderButtons","contentWithoutStyles","reduce","newContentState","removeInlineStyle","push","MODES","מקרה","types","דין","טעם","כותרת","מעשה","אמירה","שאלה","תשובה","קושיא","תירוץ","ראיה","סיוע","אגדה","אוקימתא","LAYOUT","mishnah","talmud","NodeMenuId","GraphContextMenu","handleClick","data","target","label","firstChild","Object","keys","book","title","Node","position","positions","graph","boxes","border","handleDrag","d","srcElement","x","lastX","deltaX","y","lastY","deltaY","onStop","onDrag","defaultPosition","borderColor","readOnly","Nodes","SequentialPath","links","i","path","forEach","start","strokeWidth","lineColor","headColor","dashness","ConnectionMenuId","ConnectionContextMenu","reducerType","returnNodeParent","classList","contains","parentNode","selectedNode","connections","includes","connection","mode","ConnectionListener","f","addEventListener","removeEventListener","NodeConnections","anchors","hasOwnProperty","sideStartOffset","sideEndOffset","startAnchor","offset","bottomness","rightness","endAnchor","headSize","arrowBodyProps","arrowHeadProps","SVGcanvasProps","middle","transform","SaveState","s","setName","onSubmit","evt","exportObj","exportName","dataStr","encodeURIComponent","downloadAnchorNode","createElement","setAttribute","body","appendChild","click","remove","downloadObjectAsJson","LoadState","file","getElementById","files","reader","FileReader","readAsText","onload","result","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","activeId","id1","splits","ArgButtonsSlice","createSlice","connection_color","tail_selected","tail_id","reducers","updateColor","action","updateTail","resetToDragging","actions","configureStore","reducer","undoable","index","indexOf","id2","nanoid","textOne","textTwo","newOrder","splice","pos","newPosition","idx","newConnections","filter","Set","array","join","contentState1","contentState2","selectionState2","insertionSelectionState","mergedContent","replaceWithFragment","getBlockMap","c","toString","excludeAction","args","ArgsButtonsReducer","ReactDOM","render","store"],"mappings":"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","file":"static/js/main.f2b3266a.chunk.js","sourcesContent":["import React from 'react';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport './Blocks.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Switch from 'react-switch';\n\nfunction Note({ id }) {\n  const note = useSelector((state) => state.blocks.present.notes[id]);\n  const view = useSelector((state) => state.blocks.present.views[id]);\n  const dispatch = useDispatch();\n  if (view === false || view === undefined) {\n    return <div />;\n  }\n  return (\n    <TextareaAutosize\n      id={id}\n      class=\"note\"\n      onSelect={() => dispatch({ type: 'updateNote', payload: { id } })}\n      onChange={() => dispatch({ type: 'updateNote', payload: { id } })}\n      onClick={(e) => {\n        if (e.ctrlKey || e.metaKey || e.shiftKey) return 0; // ignore shift clicks\n        dispatch({ type: 'updateNote', payload: { id } });\n      }}\n      value={note}\n    />\n  );\n}\n\nfunction ToggleNoteButton({ id }) {\n  const checked = useSelector((state) => state.blocks.present.views[id]);\n  const dispatch = useDispatch();\n  return (\n    <Switch\n      checked={checked}\n      onChange={() => dispatch({ type: 'toggleNote', payload: { id } })}\n      uncheckedIcon={false}\n      checkedIcon={false}\n      className=\"switch\"\n      onColor=\"#888888\"\n      onHandleColor=\"#ffffff\"\n      offColor=\"#888888\"\n      boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n      activeBoxShadow=\"0px 0px 1px 1px rgba(0, 0, 0, 0.2)\"\n      height={10}\n      width={20}\n    />\n  );\n}\n\nexport { Note, ToggleNoteButton };\n","import {\n  EditorState,\n  SelectionState,\n  Modifier,\n  convertToRaw,\n  RichUtils,\n} from 'draft-js';\n\nexport function splitState(state) {\n  const caret = state.getSelection().getAnchorOffset();\n  const end = state.getCurrentContent().getPlainText().length;\n\n  const currentBlockKey = state.getSelection().getAnchorKey();\n  const lastBlockKey = state.getCurrentContent().getLastBlock().key;\n  const firstBlockKey = state.getCurrentContent().getFirstBlock().key;\n\n  const selectionSlice1 = SelectionState.createEmpty('blockkey').merge({\n    anchorKey: currentBlockKey,\n    anchorOffset: caret,\n    focusOffset: end,\n    focusKey: lastBlockKey,\n  });\n  const selectionSlice2 = SelectionState.createEmpty('blockkey').merge({\n    anchorKey: firstBlockKey,\n    anchorOffset: 0,\n    focusKey: currentBlockKey,\n    focusOffset: caret,\n  });\n\n  const contentSlice2 = Modifier.removeRange(\n    state.getCurrentContent(),\n    selectionSlice2,\n    'forward'\n  );\n  const contentSlice1 = Modifier.removeRange(\n    state.getCurrentContent(),\n    selectionSlice1,\n    'forward'\n  );\n\n  return {\n    slice1: JSON.stringify(convertToRaw(contentSlice1)),\n    slice2: JSON.stringify(convertToRaw(contentSlice2)),\n  };\n}\n\nexport function getSelectionInfo(state) {\n  const selection = state.getSelection();\n\n  const flag = selection.getAnchorOffset() < selection.getFocusOffset();\n  if (flag) {\n    return {\n      anchorKey: selection.getAnchorKey(),\n      anchorOffset: selection.getAnchorOffset(),\n      focusKey: selection.getFocusKey(),\n      focusOffset: selection.getFocusOffset(),\n      isBackward: flag,\n    };\n  }\n\n  return {\n    anchorKey: selection.getFocusKey(),\n    anchorOffset: selection.getFocusOffset(),\n    focusKey: selection.getAnchorKey(),\n    focusOffset: selection.getAnchorOffset(),\n    isBackward: flag,\n  };\n}\n\nexport function createSelection({\n  anchorKey,\n  anchorOffset,\n  focusKey,\n  focusOffset,\n}) {\n  return SelectionState.createEmpty('blockkey').merge({\n    anchorKey,\n    anchorOffset,\n    focusKey,\n    focusOffset,\n    isBackward: false,\n  });\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Editor, EditorState, convertToRaw, convertFromRaw } from 'draft-js';\nimport { splitState, getSelectionInfo } from './helpers';\nimport './Blocks.css';\n\nexport const styleMap = {\n  TANNA: {\n    color: 'blue',\n  },\n  AMORA: {\n    color: 'green',\n  },\n  AMORA_MIDRASH: {\n    color: 'aqua',\n  },\n  STAM: {\n    color: 'purple',\n  },\n  STAM_MIDRASH: {\n    color: 'orange',\n  },\n  CLEAR: {\n    color: 'black',\n  },\n};\n\nexport default function TextField({ id }) {\n  const txt = useSelector((state) => state.blocks.present.txts)[id];\n\n  const reduxEditorState = EditorState.createWithContent(\n    convertFromRaw(JSON.parse(txt))\n  );\n  const [localEditorState, setEditorState] = useState(() =>\n    EditorState.createWithContent(convertFromRaw(JSON.parse(txt)))\n  );\n  const dispatch = useDispatch();\n\n  if (\n    reduxEditorState.getCurrentContent().getPlainText() !==\n    localEditorState.getCurrentContent().getPlainText()\n  ) {\n    console.log('infinite loop1');\n    setEditorState(reduxEditorState);\n  }\n  // if (\n  //   reduxEditorState.getCurrentInlineStyle() !==\n  //   localEditorState.getCurrentInlineStyle()\n  // ) {\n  //   console.log('infinite loop2'); // this is sometimes triggered a lot\n  //   console.log(reduxEditorState.getCurrentInlineStyle());\n  //   console.log(localEditorState.getCurrentInlineStyle());\n  //   console.log(reduxEditorState.getSelection());\n  //   console.log(reduxEditorState.getSelection());\n\n  //   setEditorState(reduxEditorState);\n  // }\n  if (\n    txt !== JSON.stringify(convertToRaw(localEditorState.getCurrentContent()))\n  ) {\n    console.log('infinite loop3');\n    setEditorState(reduxEditorState);\n  }\n  // Hack to force focus on texteditor after rerender\n  let domEditor = 0;\n  const setDomEditorRef = (ref) => (domEditor = ref);\n  useEffect(() => {\n    const element = document.activeElement;\n    if (\n      element.getAttribute('class') === 'notranslate public-DraftEditor-content'\n    ) {\n      if (\n        element.parentElement.parentElement.parentElement.getAttribute('id') ===\n        id\n      ) {\n        domEditor.focus();\n      }\n    }\n  });\n\n  return (\n    <>\n      <div className=\"text_editor\" id={id}>\n        <Editor\n          ref={setDomEditorRef}\n          customStyleMap={styleMap}\n          editorState={localEditorState}\n          onChange={(state) => {\n            const justSelection =\n              state.getCurrentContent().getPlainText() ===\n              localEditorState.getCurrentContent().getPlainText();\n            setEditorState(state);\n            if (justSelection) {\n              dispatch({\n                type: 'updateSelection',\n                payload: {\n                  id,\n                  split: splitState(state),\n                  selection: getSelectionInfo(state),\n                },\n              });\n            } else {\n              dispatch({\n                type: 'updateText',\n                payload: {\n                  id,\n                  txt: JSON.stringify(convertToRaw(state.getCurrentContent())),\n                  split: splitState(state),\n                  selection: getSelectionInfo(state),\n                },\n              });\n            }\n          }}\n        />\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Note, ToggleNoteButton } from './Note';\nimport TextField from './Text';\nimport './Blocks.css';\n\nexport default function Blocks() {\n  const order = useSelector((state) => state.blocks.present.order);\n\n  const blocks = order.map((id) => (\n    <div className=\"block\" key={id}>\n      <ToggleNoteButton id={id} />\n      <TextField id={id} />\n      <Note id={id} />\n    </div>\n  ));\n  return blocks;\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './HeaderButtons.css';\nimport { ActionCreators } from 'redux-undo';\nimport {\n  EditorState,\n  RichUtils,\n  convertFromRaw,\n  convertToRaw,\n  Modifier,\n} from 'draft-js';\nimport {\n  splitState,\n  createSelection,\n  getSelectionInfo,\n} from '../blocks/helpers';\n\nexport function MergeButton() {\n  const dispatch = useDispatch();\n  return (\n    <button\n      type=\"button\"\n      onMouseDown={(event) => {\n        event.preventDefault();\n        if (\n          // verify active element is a Textfield Component\n          document.activeElement.getAttribute('class') !==\n          'notranslate public-DraftEditor-content'\n        ) {\n          return;\n        }\n        const {\n          id,\n        } = document.activeElement.parentElement.parentElement.parentElement;\n        dispatch({ type: 'mergeText', payload: { id } });\n      }}\n    >\n      merge\n    </button>\n  );\n}\n\nexport function SplitButton() {\n  const dispatch = useDispatch();\n  return (\n    <button\n      type=\"button\"\n      onMouseDown={(event) => {\n        event.preventDefault();\n        if (\n          // verify active element is a Textfield Component\n          document.activeElement.getAttribute('class') !==\n          'notranslate public-DraftEditor-content'\n        ) {\n          return;\n        }\n        const {\n          id,\n        } = document.activeElement.parentElement.parentElement.parentElement;\n        dispatch({ type: 'splitText', payload: { id } });\n      }}\n    >\n      split\n    </button>\n  );\n}\n\nexport function RedoButton() {\n  const dispatch = useDispatch();\n  return (\n    <button type=\"button\" onClick={() => dispatch(ActionCreators.redo())}>\n      redo\n    </button>\n  );\n}\n\nexport function UndoButton() {\n  const dispatch = useDispatch();\n  // const UndoButton = (\n  return (\n    <button\n      type=\"button\"\n      onClick={() => {\n        dispatch(ActionCreators.undo());\n      }}\n    >\n      undo\n    </button>\n  );\n}\n\nexport function HistoricalLayerButton(props) {\n  const dispatch = useDispatch();\n  const txts = useSelector((state) => state.blocks.present.txts);\n  const selections = useSelector((state) => state.blocks.present.selections);\n  return (\n    <button\n      type=\"button\"\n      data-style={props.dataStyle}\n      onMouseUp={(event) => event.preventDefault()}\n      onMouseDown={(event) => {\n        event.preventDefault();\n        if (\n          // verify active element is a Textfield Component\n          document.activeElement.getAttribute('class') !==\n          'notranslate public-DraftEditor-content'\n        ) {\n          return;\n        }\n        const style = event.currentTarget.getAttribute('data-style');\n        const {\n          id,\n        } = document.activeElement.parentElement.parentElement.parentElement;\n\n        const contentState = convertFromRaw(JSON.parse(txts[id]));\n        const newSelectionState = createSelection(selections[id]);\n        console.log(\n          'prior to update: ',\n          newSelectionState.getAnchorKey(),\n          newSelectionState.getAnchorOffset()\n        );\n\n        let newEditorState = EditorState.createWithContent(contentState);\n\n        newEditorState = EditorState.acceptSelection(\n          newEditorState,\n          newSelectionState\n        );\n        newEditorState = removeInlineStyles(newEditorState);\n        newEditorState = RichUtils.toggleInlineStyle(newEditorState, style);\n\n        console.log(\n          'after update:',\n          newEditorState.getSelection().getAnchorKey(),\n          newEditorState.getSelection().getAnchorOffset()\n        );\n\n        dispatch({\n          type: 'updateText',\n          payload: {\n            id,\n            txt: JSON.stringify(\n              convertToRaw(newEditorState.getCurrentContent())\n            ),\n            split: splitState(newEditorState),\n            selection: getSelectionInfo(newEditorState),\n          },\n        });\n      }}\n    >\n      {props.name}\n    </button>\n  );\n}\n\nexport default function HeaderButtons() {\n  return (\n    <div className=\"header_buttons\">\n      <UndoButton />\n      <RedoButton />\n      <MergeButton />\n      <SplitButton />\n      <HistoricalLayerButton dataStyle=\"TANNA\" name=\"Tannaitic\" />\n      <HistoricalLayerButton dataStyle=\"AMORA\" name=\"Amoraic\" />\n      <HistoricalLayerButton\n        dataStyle=\"AMORA_MIDRASH\"\n        name=\"Tannaitic from Amora\"\n      />\n      <HistoricalLayerButton dataStyle=\"STAM\" name=\"Stam\" />\n      <HistoricalLayerButton\n        dataStyle=\"STAM_MIDRASH\"\n        name=\"Tannaitic from Stam\"\n      />\n      <HistoricalLayerButton dataStyle=\"CLEAR\" name=\"Clear\" />\n    </div>\n  );\n}\n\nconst removeInlineStyles = (editorState) => {\n  const styles = [\n    'TANNA',\n    'AMORA',\n    'AMORA_MIDRASH',\n    'STAM',\n    'STAM_MIDRASH',\n    'CLEAR',\n  ];\n  const contentState = editorState.getCurrentContent();\n  const contentWithoutStyles = styles.reduce(\n    (newContentState, style) =>\n      Modifier.removeInlineStyle(\n        newContentState,\n        editorState.getSelection(),\n        style\n      ),\n    contentState\n  );\n\n  const newEditorState = EditorState.push(\n    editorState,\n    contentWithoutStyles,\n    'change-inline-style'\n  );\n\n  return newEditorState;\n};\n","import React from 'react';\nimport './css/GraphContextMenu.css';\nimport { ContextMenu, MenuItem, SubMenu } from 'react-contextmenu';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const MODES = {\n  מקרה: { color: 'MidnightBlue', types: ['arrow', 'box'] },\n  דין: { color: 'CadetBlue', types: ['arrow'] },\n  טעם: { color: 'DarkSlateGrey', types: ['arrow'] },\n  כותרת: { color: 'DarkSlateBlue', types: ['arrow', 'box'] },\n  מעשה: { color: 'LightSlateGrey', types: ['arrow', 'box'] },\n  אמירה: { color: 'DarkGreen', types: ['arrow', 'box'] },\n  שאלה: { color: 'Olive', types: ['arrow', 'box'] },\n  תשובה: { color: 'YellowGreen', types: ['arrow'] },\n  קושיא: { color: 'Tomato', types: ['arrow'] },\n  תירוץ: { color: 'OrangeRed', types: ['arrow'] },\n  ראיה: { color: 'DarkOrange', types: ['arrow'] },\n  סיוע: { color: 'Gold', types: ['arrow'] },\n  אגדה: { color: 'IndianRed', types: ['arrow', 'box'] },\n  אוקימתא: { color: 'DarkSalmon', types: ['arrow'] },\n};\n\nconst LAYOUT = {\n  mishnah: ['מקרה', 'דין', 'טעם', 'כותרת', 'מעשה', 'אוקימתא'],\n  talmud: [\n    'אמירה',\n    'שאלה',\n    'תשובה',\n    'קושיא',\n    'תירוץ',\n    'ראיה',\n    'סיוע',\n    'אגדה',\n    'אוקימתא',\n  ],\n};\n\nexport const NodeMenuId = 'node_menu';\n\nexport default function GraphContextMenu() {\n  // updates State and changes cursor color\n  const handleClick = (event, data, element) => {\n    const { target, label, type, dispatch } = data;\n    const { id } = element.firstChild;\n    // document.body.style.cursor = `url(${cursor}), auto`;\n    if (type === 'arrow') {\n      dispatch({ type: 'setMode', payload: { label, id } });\n    } else {\n      dispatch({ type: 'setBox', payload: { label, id } });\n    }\n  };\n\n  const removeBox = (event, data, element) => {\n    const { target, dispatch } = data;\n    const { id } = element.firstChild;\n    dispatch({ type: 'removeBox', payload: { id } });\n  };\n  const dispatch = useDispatch();\n\n  return (\n    <ContextMenu id={NodeMenuId} className=\"context-menu\">\n      <MenuItem onClick={removeBox} data={{ dispatch }} key={'remove'}>\n        {'Remove Box'}\n      </MenuItem>\n\n      {Object.keys(LAYOUT).map((book) => (\n        <SubMenu title={book} key={book}>\n          {LAYOUT[book].map((label) => (\n            <SubMenu title={label} key={label}>\n              {MODES[label].types.map((type) => (\n                <MenuItem\n                  onClick={handleClick}\n                  data={{ label, type, dispatch }}\n                  key={type}\n                >\n                  {type}\n                </MenuItem>\n              ))}\n            </SubMenu>\n          ))}\n        </SubMenu>\n      ))}\n    </ContextMenu>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport React from 'react';\nimport Draggable from 'react-draggable';\nimport { NodeMenuId } from './GraphContextMenu';\nimport './css/Nodes.css';\nimport { convertFromRaw } from 'draft-js';\nimport { MODES } from './GraphContextMenu';\nimport { Editor, EditorState } from 'draft-js';\nimport { styleMap } from '../blocks/Text';\n\nconst Node = (props) => {\n  const { id } = props;\n  const dispatch = useDispatch();\n  const position = useSelector((state) => state.blocks.present.positions[id]);\n  const txt = useSelector((state) => state.blocks.present.txts[id]);\n  const label = useSelector((state) => state.blocks.present.graph.boxes[id]);\n\n  // determines style for border of node\n  let border = '';\n  if (label) {\n    border = MODES[label].color;\n  } else {\n    border = '';\n  }\n  const handleDrag = (e, d) => {\n    dispatch({\n      type: 'updatePosition',\n      payload: {\n        id: e.srcElement.id,\n        x: d.lastX + d.deltaX,\n        y: d.lastY + d.deltaY,\n      },\n    });\n  };\n  const [x, y] = position;\n  return (\n    <ContextMenuTrigger id={NodeMenuId} key={id}>\n      <Draggable\n        onStop={handleDrag}\n        onDrag={handleDrag}\n        key={id}\n        defaultPosition={{ x, y }}\n      >\n        <fieldset className=\"node\" id={id} style={{ borderColor: border }}>\n          <legend className=\"label\" style={{ color: border }}>\n            {label}\n          </legend>\n          <Editor\n            readOnly\n            customStyleMap={styleMap}\n            editorState={EditorState.createWithContent(\n              convertFromRaw(JSON.parse(txt))\n            )}\n            onChange={() => {}}\n          />\n        </fieldset>\n      </Draggable>\n    </ContextMenuTrigger>\n  );\n};\n\nexport default function Nodes() {\n  const order = useSelector((state) => state.blocks.present.order);\n  const nodes = order.map((id) => <Node id={id} key={id} />);\n  return nodes;\n}\n","import { useSelector } from 'react-redux';\nimport React from 'react';\nimport Xarrow from 'react-xarrows';\n\nexport default function SequentialPath() {\n  const order = useSelector((state) => state.blocks.present.order);\n  // triggers re-render on state change\n  const positions = useSelector((state) => state.blocks.present.positions);\n\n  const links = {};\n  for (let i = 0; i < order.length - 1; i += 1) {\n    links[order[i]] = order[i + 1];\n  }\n\n  const path = [];\n  Object.keys(links).forEach((key) =>\n    path.push(\n      <Xarrow\n        key={key}\n        start={key}\n        end={links[key]}\n        strokeWidth={1}\n        lineColor=\"grey\"\n        headColor=\"grey\"\n        dashness\n      />\n    )\n  );\n  return path;\n}\n","import React from 'react';\nimport { ContextMenu, MenuItem } from 'react-contextmenu';\nimport { useDispatch } from 'react-redux';\n\nexport const ConnectionMenuId = 'connection_menu';\n\nexport default function ConnectionContextMenu() {\n  // updates State and changes cursor color\n  const handleClick = (event, data, element) => {\n    const { target, reducerType, dispatch } = data;\n    const { id } = target.parentElement.parentElement;\n    dispatch({ type: reducerType, payload: {id}  });\n  };\n  const dispatch = useDispatch();\n  return (\n    <ContextMenu id={ConnectionMenuId}>\n        <MenuItem\n          onClick={handleClick}\n          data={{reducerType: \"deleteConnection\", dispatch: dispatch}}\n          key='deleteConnection'\n          >\n          {\"Delete\"}\n        </MenuItem>\n    </ContextMenu>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction returnNodeParent(target) {\n  // returns closest parent of target if\n  // if parent is class 'node' or 'react-contextmenu-item\n  if (target === document) {\n    return false;\n  }\n  if (target.classList.contains('react-contextmenu-item')) {\n    return target;\n  }\n  if (target.classList.contains('node')) {\n    return target;\n  }\n  return returnNodeParent(target.parentNode);\n}\n\nfunction onClick(event, graph, dispatch) {\n  const target = returnNodeParent(event.target);\n\n  if (target === false) {\n    dispatch({ type: 'resetMode' });\n  } else if (target.classList[0] === 'react-contextmenu-item') {\n    // Entered Connection Mode\n  } else if (target.classList[0] === 'node') {\n    if (graph.selectedNode !== null) {\n      // console.log('In Connection Mode');\n      if (graph.selectedNode === target.id) {\n        // console.log('Same ID Clicked');\n      } else if (graph.connections.includes([graph.selectedNode, target.id])) {\n        // console.log('Connection Already in Present');\n      } else {\n        dispatch({\n          type: 'addConnection',\n          payload: {\n            connection: [graph.selectedNode, target.id, graph.mode],\n          },\n        });\n      }\n    }\n    dispatch({ type: 'resetMode' });\n  }\n}\n\nexport default function ConnectionListener() {\n  const graph = useSelector((state) => state.blocks.present.graph);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    function f(e) {\n      return onClick(e, graph, dispatch);\n    }\n    document.addEventListener('click', f);\n    return () => {\n      document.removeEventListener('click', f);\n    };\n  }, [graph]);\n  return <></>;\n}\n","import { useSelector } from 'react-redux';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport React from 'react';\nimport Xarrow from 'react-xarrows';\nimport { MODES } from './GraphContextMenu';\nimport { ConnectionMenuId } from './ConnectionContextMenu';\nimport './css/Connections.css';\n\nexport default function NodeConnections() {\n  const connections = useSelector(\n    (state) => state.blocks.present.graph.connections\n  );\n  // triggers re-render on state change\n  const positions = useSelector((state) => state.blocks.present.positions);\n  const anchors = {};\n  return connections.map((connection) => {\n    const start = connection[0];\n    const end = connection[1];\n    const mode = connection[2];\n\n    anchors.hasOwnProperty(start)\n      ? (anchors[start] += 1)\n      : (anchors[start] = 1);\n    anchors.hasOwnProperty(end) ? (anchors[end] += 1) : (anchors[end] = 1);\n    // start and end offsets begin at index 1 (leaves room for sequential path)\n\n    // console.log(anchors);\n    let sideStartOffset = anchors[start];\n    if (sideStartOffset % 2 === 0) {\n      sideStartOffset /= -2;\n    } else {\n      sideStartOffset += 1;\n      sideStartOffset /= 2;\n    }\n    let sideEndOffset = anchors[end];\n    if (sideEndOffset % 2 === 0) {\n      sideEndOffset /= -2;\n    } else {\n      sideEndOffset += 1;\n      sideEndOffset /= 2;\n    }\n    // console.log(anchors)\n\n    const longStartOffset = anchors[start];\n\n    const yspacing = 10;\n    const xspacing = 10;\n    console.log(mode, MODES);\n\n    return (\n      <ContextMenuTrigger id={ConnectionMenuId} key={start + end + mode}>\n        <Xarrow\n          key={start + end + mode}\n          id={start + end + mode}\n          start={start}\n          end={end}\n          startAnchor={[\n            {\n              position: 'right',\n              offset: { bottomness: yspacing * sideStartOffset, rightness: 0 },\n            },\n            {\n              position: 'left',\n              offset: { bottomness: yspacing * sideStartOffset, rightness: 0 },\n            },\n            {\n              position: 'bottom',\n              offset: { bottomness: 0, rightness: xspacing * sideStartOffset },\n            },\n            {\n              position: 'top',\n              offset: { bottomness: 0, rightness: xspacing * sideStartOffset },\n            },\n          ]}\n          endAnchor={[\n            {\n              position: 'right',\n              offset: { bottomness: yspacing * sideEndOffset, rightness: 0 },\n            },\n            {\n              position: 'left',\n              offset: { bottomness: yspacing * sideEndOffset, rightness: 0 },\n            },\n            {\n              position: 'bottom',\n              offset: { bottomness: 0, rightness: xspacing * sideEndOffset },\n            },\n            {\n              position: 'top',\n              offset: { bottomness: 0, rightness: xspacing * sideEndOffset },\n            },\n          ]}\n          strokeWidth={3}\n          headSize={5}\n          lineColor={MODES[mode].color}\n          headColor={MODES[mode].color}\n          arrowBodyProps={{ className: 'arrow_body' }}\n          arrowHeadProps={{ className: 'arrow_head' }}\n          SVGcanvasProps={{ className: 'svg' }}\n          // path=\"grid\"\n          label={{\n            middle: (\n              <div\n                className=\"arrow_label\"\n                style={{\n                  color: MODES[mode].color,\n                  transform: 'translate(100%, 0%)',\n                }}\n              >\n                {mode[0]}\n              </div>\n            ),\n          }}\n        />\n      </ContextMenuTrigger>\n    );\n  });\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './DownloadButton.css';\n\nfunction downloadObjectAsJson(exportObj, exportName) {\n  let dataStr =\n    'data:text/json;charset=utf-8,' +\n    encodeURIComponent(JSON.stringify(exportObj));\n  let downloadAnchorNode = document.createElement('a');\n  downloadAnchorNode.setAttribute('href', dataStr);\n  downloadAnchorNode.setAttribute('download', exportName + '.json');\n  document.body.appendChild(downloadAnchorNode); // required for firefox\n  downloadAnchorNode.click();\n  downloadAnchorNode.remove();\n}\n\nexport function SaveState() {\n  const s = useSelector((state) => state.blocks.present);\n  // const positions = useSelector((state) => state.blocks.present.positions);\n  const [name, setName] = useState('');\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    downloadObjectAsJson(s, name);\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Save File:\n        <input\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n      </label>\n      <input type=\"submit\" value=\"Save\" />\n    </form>\n  );\n}\n\nexport function LoadState() {\n  const dispatch = useDispatch();\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    // console.log(file.name);\n    const file = document.getElementById('file').files[0];\n    let reader = new FileReader();\n    reader.readAsText(file);\n    reader.onload = function () {\n      const state = JSON.parse(reader.result);\n      console.log(state);\n      dispatch({\n        type: 'loadState',\n        payload: {\n          state,\n        },\n      });\n    };\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"file\" id=\"file\" name=\"file\" className=\"inputfile\" />\n      {/* <label for=\"file\">Load File:</label> */}\n      <input type=\"submit\" value=\"Load\" />\n    </form>\n  );\n}\n","import './App.css';\nimport React from 'react';\nimport Blocks from './features/blocks/Blocks';\nimport HeaderButtons from './features/HeaderButtons/HeaderButtons';\nimport Graph from './features/graph/Graph';\nimport { SaveState, LoadState } from './features/HeaderButtons/DownloadButton';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"load_save_buttons\">\n        <SaveState />\n        <LoadState />\n      </div>\n      <div className=\"graph\">{Graph()}</div>\n      <div className=\"right_buttons\">\n        <HeaderButtons />\n      </div>\n      <div className=\"right_panel\">\n        <Blocks />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport './css/Graph.css';\nimport Nodes from './Nodes';\nimport SequentialPath from './SequentialPath';\nimport GraphContextMenu from './GraphContextMenu';\nimport ConnectionContextMenu from './ConnectionContextMenu';\nimport ConnectionListener from './ConnectionListener';\nimport NodeConnections from './Connections';\n\nexport default function Graph() {\n  return (\n    <>\n      <div className=\"canvas\">\n        <Nodes />\n        <SequentialPath />\n        <NodeConnections />\n      </div>\n      <GraphContextMenu />\n      <ConnectionContextMenu />\n      <ConnectionListener />\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { nanoid } from '@reduxjs/toolkit';\nimport {\n  EditorState,\n  SelectionState,\n  convertToRaw,\n  convertFromRaw,\n  Modifier,\n} from 'draft-js';\n\nconst initialState = {\n  caret: -1,\n  activeId: 'id1',\n  order: ['id1'],\n  txts: {\n    id1: JSON.stringify(\n      convertToRaw(EditorState.createEmpty().getCurrentContent())\n    ),\n  },\n  splits: { id1: { slice1: 0, slice2: 0 } },\n  selections: {\n    id1: { anchorKey: 0, anchorOffset: 0, focusKey: 0, focusOffset: 0 },\n  },\n  notes: { id1: '' },\n  views: { id1: false },\n  positions: { id1: [0, 0] },\n  graph: { connections: [], mode: null, selectedNode: null, boxes: {} },\n};\n\nexport default function BlocksReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'loadState':\n      return action.payload.state;\n    case 'updateId':\n      return {\n        ...state,\n        caret: action.payload.caret,\n        activeId: action.payload.id,\n      };\n    case 'updateText':\n      return {\n        ...state,\n        txts: { ...state.txts, [action.payload.id]: action.payload.txt },\n        splits: { ...state.splits, [action.payload.id]: action.payload.split },\n        selections: {\n          ...state.selections,\n          [action.payload.id]: action.payload.selection,\n        },\n      };\n    case 'updateSelection':\n      return {\n        ...state,\n        splits: { ...state.splits, [action.payload.id]: action.payload.split },\n        selections: {\n          ...state.selections,\n          [action.payload.id]: action.payload.selection,\n        },\n      };\n    case 'splitText': {\n      // Initialize ids, texts, and order\n      const id1 = action.payload.id;\n      const index = state.order.indexOf(id1);\n      const id2 = nanoid();\n      const textOne = state.splits[id1]['slice1'];\n      const textTwo = state.splits[id1]['slice2'];\n      const newOrder = [...state.order];\n      newOrder.splice(index + 1, 0, id2);\n\n      // Set new position of node in graph\n      const pos = state.positions[id1];\n      const newPosition = [pos[0], pos[1] + 100];\n      return {\n        ...state,\n        activeId: id2,\n        order: newOrder,\n        txts: {\n          ...state.txts,\n          [id1]: textOne,\n          [id2]: textTwo,\n        },\n        splits: {\n          ...state.splits,\n          [id1]: { slice1: textOne, slice2: textOne },\n          [id2]: { slice1: textTwo, slice2: textTwo },\n        },\n        notes: { ...state.notes, [id2]: '' },\n        views: { ...state.views, [id2]: false },\n        positions: { ...state.positions, [id2]: newPosition },\n      };\n    }\n    case 'mergeText': {\n      const id2 = action.payload.id;\n      const idx = state.order.indexOf(id2);\n      if (idx === 0) {\n        return state; // not possible to merge up first block\n      }\n      const id1 = state.order[idx - 1];\n      const newOrder = [...state.order];\n      newOrder.splice(idx, 1);\n\n      // Move merged connections\n      let newConnections = state.graph.connections\n        .map((connection) =>\n          connection.map((id) => {\n            if (id === id2) {\n              return id1;\n            }\n            return id;\n          })\n        )\n        .filter((connection) => connection[0] !== connection[1]);\n      // Remove Duplicate connections\n      const s = new Set(newConnections.map((array) => array.join()));\n      newConnections = [...s].map((array) => array.split(','));\n\n      // Creates Merged Content State\n      const contentState1 = convertFromRaw(JSON.parse(state.txts[id1]));\n      const contentState2 = convertFromRaw(JSON.parse(state.txts[id2]));\n      const selectionState2 = EditorState.createWithContent(\n        contentState2\n      ).getSelection();\n      const firstBlockKey = selectionState2.getAnchorKey();\n      const insertionSelectionState = SelectionState.createEmpty(\n        'blockkey'\n      ).merge({\n        anchorKey: firstBlockKey,\n        anchorOffset: 0,\n        focusKey: firstBlockKey,\n        focusOffset: 0,\n      });\n      const mergedContent = Modifier.replaceWithFragment(\n        contentState2,\n        insertionSelectionState,\n        contentState1.getBlockMap()\n      );\n\n      return {\n        ...state,\n        activeId: id1,\n        order: newOrder,\n        txts: {\n          ...state.txts,\n          [id1]: JSON.stringify(convertToRaw(mergedContent)),\n        },\n        splits: {\n          ...state.splits,\n          [id1]: { slice1: 0, slice2: 0 },\n        },\n        notes: {\n          ...state.notes,\n          [id1]: state.notes[id1] + state.notes[id2],\n        },\n        graph: { ...state.graph, connections: newConnections },\n      };\n    }\n    case 'toggleNote': {\n      const { id } = action.payload;\n      return { ...state, views: { ...state.views, [id]: !state.views[id] } };\n    }\n    case 'updateNote': {\n      const { id } = action.payload;\n      const e = document.activeElement;\n      return { ...state, notes: { ...state.notes, [id]: e.value } };\n    }\n    case 'updatePosition': {\n      const { id, x, y } = action.payload;\n      return { ...state, positions: { ...state.positions, [id]: [x, y] } };\n    }\n    case 'setMode':\n      return {\n        ...state,\n        graph: {\n          ...state.graph,\n          mode: action.payload.label, // bad variables names\n          selectedNode: action.payload.id,\n        },\n      };\n    case 'resetMode':\n      return {\n        ...state,\n        graph: { ...state.graph, mode: null, selectedNode: null },\n        mode: '',\n        id: null,\n      };\n    case 'setBox': {\n      const { label, id } = action.payload;\n      return {\n        ...state,\n        graph: { ...state.graph, boxes: { ...state.graph.boxes, [id]: label } },\n      };\n    }\n    case 'removeBox': {\n      const { id } = action.payload;\n      const boxes = { ...state.graph.boxes };\n      delete boxes[id];\n      return {\n        ...state,\n        graph: { ...state.graph, boxes: { ...boxes } },\n      };\n    }\n    case 'addConnection':\n      // Verify that connection does not already exist\n      if (\n        state.graph.connections.filter(\n          (c) => c.toString() === action.payload.connection.toString()\n        ).length > 0 &&\n        state.graph.connections.length > 0\n      ) {\n        return state;\n      }\n      // Add connection\n      return {\n        ...state,\n        graph: {\n          ...state.graph,\n          connections: [...state.graph.connections, action.payload.connection],\n        },\n      };\n    case 'deleteConnection': {\n      const newConnections = state.graph.connections.filter(\n        (connection) =>\n          connection[0] + connection[1] + connection[2] !== action.payload.id\n      );\n      return {\n        ...state,\n        graph: { ...state.graph, connections: newConnections },\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const ArgButtonsSlice = createSlice({\n  name: 'args',\n  initialState: {\n    connection_color: null, // color of current selected arrow type\n    tail_selected: false, // specifies if prior click was on valid node\n    tail_id: null, // id of prior node click\n  },\n  reducers: {\n    updateColor: (state, action) => {\n      state.connection_color = action.color;\n      state.tail_selected = false;\n      state.tail_id = null;\n    },\n    updateTail: (state, action) => {\n      state.tail_selected = true;\n      state.tail_id = action.id;\n    },\n    resetToDragging: (state) => {\n      state.connection_color = null;\n      state.tail_selected = false;\n      state.tail_id = null;\n    },\n  },\n});\n\nexport const {\n  updateColor,\n  updateTail,\n  resetToDragging,\n} = ArgButtonsSlice.actions;\nexport default ArgButtonsSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport undoable, { excludeAction } from 'redux-undo';\nimport blocksReducer from '../features/blocks/BlocksReducer';\nimport ArgsButtonsReducer from '../features/ArgButtons/ArgButtonsSlice';\n\nexport default configureStore({\n  reducer: {\n    blocks: undoable(blocksReducer, {\n      filter: excludeAction([\n        'updateId',\n        'updateCaret',\n        'updatePosition',\n        'toggleNote',\n        'updateNote',\n        'resetMode',\n        'setMode',\n        'updateSelection',\n      ]),\n    }),\n    args: ArgsButtonsReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './app/store';\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}