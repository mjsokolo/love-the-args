{"version":3,"sources":["features/blocks/Note.js","features/blocks/helpers.js","features/blocks/Text.js","features/blocks/Blocks.js","features/HeaderButtons/HeaderButtons.js","features/graph/GraphContextMenu.js","features/graph/Nodes.js","features/graph/SequentialPath.js","features/graph/ConnectionContextMenu.js","features/graph/ConnectionListener.js","features/graph/Connections.js","features/HeaderButtons/DownloadButton.js","App.js","features/graph/Graph.js","reportWebVitals.js","features/blocks/BlocksReducer.js","features/ArgButtons/ArgButtonsSlice.js","app/store.js","index.js"],"names":["Note","id","note","useSelector","state","blocks","present","notes","view","views","dispatch","useDispatch","undefined","className","onSelect","type","payload","onChange","onClick","e","ctrlKey","metaKey","shiftKey","value","ToggleNoteButton","checked","uncheckedIcon","checkedIcon","onColor","onHandleColor","offColor","boxShadow","activeBoxShadow","height","width","splitState","caret","getSelection","getAnchorOffset","end","getCurrentContent","getPlainText","length","currentBlockKey","getAnchorKey","lastBlockKey","getLastBlock","key","firstBlockKey","getFirstBlock","selectionSlice1","SelectionState","createEmpty","merge","anchorKey","anchorOffset","focusOffset","focusKey","selectionSlice2","contentSlice2","Modifier","removeRange","contentSlice1","slice1","JSON","stringify","convertToRaw","slice2","getSelectionInfo","selection","flag","getFocusOffset","getFocusKey","isBackward","styleMap","TANNA","backgroundColor","AMORA","STAM","AMORA_MIDRASH","borderBottom","STAM_MIDRASH","STAM_AMORA","TANAKH","fontWeight","CLEAR","color","TextField","txt","txts","reduxEditorState","EditorState","createWithContent","convertFromRaw","parse","useState","localEditorState","setEditorState","console","log","domEditor","useEffect","element","document","activeElement","getAttribute","parentElement","focus","ref","customStyleMap","editorState","justSelection","split","Blocks","order","map","MergeButton","onMouseDown","event","preventDefault","SplitButton","RedoButton","ActionCreators","redo","UndoButton","undo","HistoricalLayerButton","props","selections","style","dataStyle","data-style","onMouseUp","currentTarget","contentState","newSelectionState","createSelection","newEditorState","acceptSelection","clearer","clearAllInLineStyles","layerable","removePrimaryInLineStyles","RichUtils","toggleInlineStyle","name","HeaderButtons","removeInlineStyles","styles","contentWithoutStyles","reduce","newContentState","removeInlineStyle","push","allStyles","primaryStyles","MODES","מקרה","types","דין","טעם","כותרת","מעשה","אמירה","שאלה","תשובה","קושיא","תירוץ","ראיה","סיוע","אגדה","אוקימתא","LAYOUT","mishnah","talmud","NodeMenuId","GraphContextMenu","handleClick","data","target","label","firstChild","Object","keys","book","title","Node","position","positions","graph","boxes","selectedNode","borderColor","border","handleDrag","d","x","lastX","deltaX","y","lastY","deltaY","onStop","onDrag","defaultPosition","readOnly","Nodes","SequentialPath","links","i","path","forEach","start","strokeWidth","lineColor","headColor","dashness","ConnectionMenuId","ConnectionContextMenu","reducerType","returnNodeParent","classList","contains","parentNode","connections","includes","connection","mode","ConnectionListener","f","addEventListener","removeEventListener","NodeConnections","anchors","hasOwnProperty","sideStartOffset","sideEndOffset","startAnchor","offset","bottomness","rightness","endAnchor","headSize","arrowBodyProps","arrowHeadProps","SVGcanvasProps","middle","transform","SaveState","s","setName","onSubmit","evt","exportObj","exportName","dataStr","encodeURIComponent","downloadAnchorNode","createElement","setAttribute","body","appendChild","click","remove","downloadObjectAsJson","LoadState","file","getElementById","files","reader","FileReader","readAsText","onload","result","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","activeId","id1","splits","ArgButtonsSlice","createSlice","connection_color","tail_selected","tail_id","reducers","updateColor","action","updateTail","resetToDragging","actions","configureStore","reducer","undoable","index","indexOf","id2","nanoid","textOne","textTwo","newOrder","splice","pos","getElementsByClassName","namedItem","clientHeight","newPosition","currentPositions","values","filter","p","idx","newConnections","Set","array","join","contentState1","contentState2","selectionState2","insertionSelectionState","mergedContent","replaceWithFragment","getBlockMap","c","toString","excludeAction","args","ArgsButtonsReducer","ReactDOM","render","store"],"mappings":"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","file":"static/js/main.285167c7.chunk.js","sourcesContent":["import React from 'react';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport './Blocks.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Switch from 'react-switch';\n\nfunction Note({ id }) {\n  const note = useSelector((state) => state.blocks.present.notes[id]);\n  const view = useSelector((state) => state.blocks.present.views[id]);\n  const dispatch = useDispatch();\n  if (view === false || view === undefined) {\n    return <div />;\n  }\n  return (\n    <TextareaAutosize\n      id={id}\n      className=\"note\"\n      onSelect={() => dispatch({ type: 'updateNote', payload: { id } })}\n      onChange={() => dispatch({ type: 'updateNote', payload: { id } })}\n      onClick={(e) => {\n        if (e.ctrlKey || e.metaKey || e.shiftKey) return 0; // ignore shift clicks\n        dispatch({ type: 'updateNote', payload: { id } });\n      }}\n      value={note}\n    />\n  );\n}\n\nfunction ToggleNoteButton({ id }) {\n  const checked = useSelector((state) => state.blocks.present.views[id]);\n  const dispatch = useDispatch();\n  return (\n    <Switch\n      checked={checked}\n      onChange={() => dispatch({ type: 'toggleNote', payload: { id } })}\n      uncheckedIcon={false}\n      checkedIcon={false}\n      className=\"switch\"\n      onColor=\"#222255\"\n      onHandleColor=\"#ffffff\"\n      offColor=\"#888888\"\n      boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n      activeBoxShadow=\"0px 0px 1px 1px rgba(0, 0, 0, 0.2)\"\n      height={10}\n      width={20}\n    />\n  );\n}\n\nexport { Note, ToggleNoteButton };\n","import {\n  EditorState,\n  SelectionState,\n  Modifier,\n  convertToRaw,\n  RichUtils,\n} from 'draft-js';\n\nexport function splitState(state) {\n  const caret = state.getSelection().getAnchorOffset();\n  const end = state.getCurrentContent().getPlainText().length;\n\n  const currentBlockKey = state.getSelection().getAnchorKey();\n  const lastBlockKey = state.getCurrentContent().getLastBlock().key;\n  const firstBlockKey = state.getCurrentContent().getFirstBlock().key;\n\n  const selectionSlice1 = SelectionState.createEmpty('blockkey').merge({\n    anchorKey: currentBlockKey,\n    anchorOffset: caret,\n    focusOffset: end,\n    focusKey: lastBlockKey,\n  });\n  const selectionSlice2 = SelectionState.createEmpty('blockkey').merge({\n    anchorKey: firstBlockKey,\n    anchorOffset: 0,\n    focusKey: currentBlockKey,\n    focusOffset: caret,\n  });\n\n  const contentSlice2 = Modifier.removeRange(\n    state.getCurrentContent(),\n    selectionSlice2,\n    'forward'\n  );\n  const contentSlice1 = Modifier.removeRange(\n    state.getCurrentContent(),\n    selectionSlice1,\n    'forward'\n  );\n\n  return {\n    slice1: JSON.stringify(convertToRaw(contentSlice1)),\n    slice2: JSON.stringify(convertToRaw(contentSlice2)),\n  };\n}\n\nexport function getSelectionInfo(state) {\n  const selection = state.getSelection();\n\n  const flag = selection.getAnchorOffset() < selection.getFocusOffset();\n  if (flag) {\n    return {\n      anchorKey: selection.getAnchorKey(),\n      anchorOffset: selection.getAnchorOffset(),\n      focusKey: selection.getFocusKey(),\n      focusOffset: selection.getFocusOffset(),\n      isBackward: flag,\n    };\n  }\n\n  return {\n    anchorKey: selection.getFocusKey(),\n    anchorOffset: selection.getFocusOffset(),\n    focusKey: selection.getAnchorKey(),\n    focusOffset: selection.getAnchorOffset(),\n    isBackward: flag,\n  };\n}\n\nexport function createSelection({\n  anchorKey,\n  anchorOffset,\n  focusKey,\n  focusOffset,\n}) {\n  return SelectionState.createEmpty('blockkey').merge({\n    anchorKey,\n    anchorOffset,\n    focusKey,\n    focusOffset,\n    isBackward: false,\n  });\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Editor, EditorState, convertToRaw, convertFromRaw } from 'draft-js';\nimport { splitState, getSelectionInfo } from './helpers';\nimport './Blocks.css';\n\nexport const styleMap = {\n  TANNA: {\n    backgroundColor: '#BBCCEE',\n    // borderBottom: '2em solid #BBCCEE',\n  },\n  AMORA: {\n    backgroundColor: '#ccddaa',\n    // borderBottom: '.2em solid #ffcccc',\n  },\n  STAM: {\n    backgroundColor: '#ffcccc',\n    // borderBottom: '.2em solid #CCDDAA',\n  },\n  AMORA_MIDRASH: {\n    backgroundColor: '#BBCCEE',\n    borderBottom: '.2em solid #228833',\n  },\n  STAM_MIDRASH: {\n    backgroundColor: '#BBCCEE',\n    borderBottom: '.2em solid #ee6677',\n  },\n  STAM_AMORA: {\n    backgroundColor: '#ccddaa',\n    borderBottom: '.2em solid #ee6677',\n  },\n  TANAKH: {\n    fontWeight: 'bold',\n  },\n  CLEAR: {\n    color: 'black',\n  },\n};\n\nexport default function TextField({ id }) {\n  const txt = useSelector((state) => state.blocks.present.txts)[id];\n\n  const reduxEditorState = EditorState.createWithContent(\n    convertFromRaw(JSON.parse(txt))\n  );\n  const [localEditorState, setEditorState] = useState(() =>\n    EditorState.createWithContent(convertFromRaw(JSON.parse(txt)))\n  );\n  const dispatch = useDispatch();\n\n  if (\n    reduxEditorState.getCurrentContent().getPlainText() !==\n    localEditorState.getCurrentContent().getPlainText()\n  ) {\n    console.log('infinite loop1');\n    setEditorState(reduxEditorState);\n  }\n  // if (\n  //   reduxEditorState.getCurrentInlineStyle() !==\n  //   localEditorState.getCurrentInlineStyle()\n  // ) {\n  //   console.log('infinite loop2'); // this is sometimes triggered a lot\n  //   console.log(reduxEditorState.getCurrentInlineStyle());\n  //   console.log(localEditorState.getCurrentInlineStyle());\n  //   console.log(reduxEditorState.getSelection());\n  //   console.log(reduxEditorState.getSelection());\n\n  //   setEditorState(reduxEditorState);\n  // }\n  if (\n    txt !== JSON.stringify(convertToRaw(localEditorState.getCurrentContent()))\n  ) {\n    console.log('infinite loop3');\n    setEditorState(reduxEditorState);\n  }\n  // Hack to force focus on texteditor after rerender\n  let domEditor = 0;\n  const setDomEditorRef = (ref) => (domEditor = ref);\n  useEffect(() => {\n    const element = document.activeElement;\n    if (\n      element.getAttribute('class') === 'notranslate public-DraftEditor-content'\n    ) {\n      if (\n        element.parentElement.parentElement.parentElement.getAttribute('id') ===\n        id\n      ) {\n        domEditor.focus();\n      }\n    }\n  });\n\n  return (\n    <>\n      <div className=\"text_editor\" id={id}>\n        <Editor\n          ref={setDomEditorRef}\n          customStyleMap={styleMap}\n          editorState={localEditorState}\n          onChange={(state) => {\n            const justSelection =\n              state.getCurrentContent().getPlainText() ===\n              localEditorState.getCurrentContent().getPlainText();\n            setEditorState(state);\n            if (justSelection) {\n              dispatch({\n                type: 'updateSelection',\n                payload: {\n                  id,\n                  split: splitState(state),\n                  selection: getSelectionInfo(state),\n                },\n              });\n            } else {\n              dispatch({\n                type: 'updateText',\n                payload: {\n                  id,\n                  txt: JSON.stringify(convertToRaw(state.getCurrentContent())),\n                  split: splitState(state),\n                  selection: getSelectionInfo(state),\n                },\n              });\n            }\n          }}\n        />\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Note, ToggleNoteButton } from './Note';\nimport TextField from './Text';\nimport './Blocks.css';\n\nexport default function Blocks() {\n  const order = useSelector((state) => state.blocks.present.order);\n\n  const blocks = order.map((id) => (\n    <div className=\"block\" key={id}>\n      <ToggleNoteButton id={id} />\n      <TextField id={id} />\n      <Note id={id} />\n    </div>\n  ));\n  return blocks;\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './HeaderButtons.css';\nimport { ActionCreators } from 'redux-undo';\nimport {\n  EditorState,\n  RichUtils,\n  convertFromRaw,\n  convertToRaw,\n  Modifier,\n} from 'draft-js';\nimport {\n  splitState,\n  createSelection,\n  getSelectionInfo,\n} from '../blocks/helpers';\nimport { styleMap } from '../blocks/Text';\n\nexport function MergeButton() {\n  const dispatch = useDispatch();\n  return (\n    <button\n      type=\"button\"\n      onMouseDown={(event) => {\n        event.preventDefault();\n        if (\n          // verify active element is a Textfield Component\n          document.activeElement.getAttribute('class') !==\n          'notranslate public-DraftEditor-content'\n        ) {\n          return;\n        }\n        const {\n          id,\n        } = document.activeElement.parentElement.parentElement.parentElement;\n        dispatch({ type: 'mergeText', payload: { id } });\n      }}\n    >\n      merge\n    </button>\n  );\n}\n\nexport function SplitButton() {\n  const dispatch = useDispatch();\n  return (\n    <button\n      type=\"button\"\n      onMouseDown={(event) => {\n        event.preventDefault();\n        if (\n          // verify active element is a Textfield Component\n          document.activeElement.getAttribute('class') !==\n          'notranslate public-DraftEditor-content'\n        ) {\n          return;\n        }\n        const {\n          id,\n        } = document.activeElement.parentElement.parentElement.parentElement;\n        dispatch({ type: 'splitText', payload: { id } });\n      }}\n    >\n      split\n    </button>\n  );\n}\n\nexport function RedoButton() {\n  const dispatch = useDispatch();\n  return (\n    <button type=\"button\" onClick={() => dispatch(ActionCreators.redo())}>\n      redo\n    </button>\n  );\n}\n\nexport function UndoButton() {\n  const dispatch = useDispatch();\n  // const UndoButton = (\n  return (\n    <button\n      type=\"button\"\n      onClick={() => {\n        dispatch(ActionCreators.undo());\n      }}\n    >\n      undo\n    </button>\n  );\n}\n\nexport function HistoricalLayerButton(props) {\n  const dispatch = useDispatch();\n  const txts = useSelector((state) => state.blocks.present.txts);\n  const selections = useSelector((state) => state.blocks.present.selections);\n  return (\n    <button\n      style={styleMap[props.dataStyle]}\n      type=\"button\"\n      data-style={props.dataStyle}\n      onMouseUp={(event) => event.preventDefault()}\n      onMouseDown={(event) => {\n        event.preventDefault();\n        if (\n          // verify active element is a Textfield Component\n          document.activeElement.getAttribute('class') !==\n          'notranslate public-DraftEditor-content'\n        ) {\n          return;\n        }\n        const style = event.currentTarget.getAttribute('data-style');\n        const {\n          id,\n        } = document.activeElement.parentElement.parentElement.parentElement;\n\n        const contentState = convertFromRaw(JSON.parse(txts[id]));\n        const newSelectionState = createSelection(selections[id]);\n        let newEditorState = EditorState.createWithContent(contentState);\n        newEditorState = EditorState.acceptSelection(\n          newEditorState,\n          newSelectionState\n        );\n\n        if (props.clearer) {\n          newEditorState = clearAllInLineStyles(newEditorState);\n        } else if (props.layerable) {\n          // don't remove inline styles\n        } else {\n          newEditorState = removePrimaryInLineStyles(newEditorState);\n        }\n        newEditorState = RichUtils.toggleInlineStyle(newEditorState, style);\n\n        console.log(\n          'after update:',\n          newEditorState.getSelection().getAnchorKey(),\n          newEditorState.getSelection().getAnchorOffset()\n        );\n\n        dispatch({\n          type: 'updateText',\n          payload: {\n            id,\n            txt: JSON.stringify(\n              convertToRaw(newEditorState.getCurrentContent())\n            ),\n            split: splitState(newEditorState),\n            selection: getSelectionInfo(newEditorState),\n          },\n        });\n      }}\n    >\n      {props.name}\n    </button>\n  );\n}\n\nexport default function HeaderButtons() {\n  return (\n    <div className=\"header_buttons\">\n      <UndoButton />\n      <RedoButton />\n      <MergeButton />\n      <SplitButton />\n      <HistoricalLayerButton dataStyle=\"TANNA\" name=\"Tannaitic\" />\n      <HistoricalLayerButton dataStyle=\"AMORA\" name=\"Amoraic\" />\n      <HistoricalLayerButton dataStyle=\"STAM\" name=\"Stam\" />\n      <HistoricalLayerButton dataStyle=\"AMORA_MIDRASH\" name=\"T from A\" />\n      <HistoricalLayerButton dataStyle=\"STAM_MIDRASH\" name=\"T from S\" />\n      <HistoricalLayerButton dataStyle=\"STAM_AMORA\" name=\"A from S\" />\n      <HistoricalLayerButton\n        dataStyle=\"TANAKH\"\n        name=\"Tanakh\"\n        layerable={true}\n      />\n      <HistoricalLayerButton dataStyle=\"CLEAR\" name=\"Clear\" clearer={true} />\n    </div>\n  );\n}\n\nconst removeInlineStyles = (editorState, styles) => {\n  const contentState = editorState.getCurrentContent();\n  const contentWithoutStyles = styles.reduce(\n    (newContentState, style) =>\n      Modifier.removeInlineStyle(\n        newContentState,\n        editorState.getSelection(),\n        style\n      ),\n    contentState\n  );\n\n  const newEditorState = EditorState.push(\n    editorState,\n    contentWithoutStyles,\n    'change-inline-style'\n  );\n\n  return newEditorState;\n};\n\nconst allStyles = [\n  'TANNA',\n  'AMORA',\n  'AMORA_MIDRASH',\n  'STAM',\n  'STAM_MIDRASH',\n  'STAM_AMORA',\n  'CLEAR',\n  'TANAKH',\n];\n\nconst primaryStyles = [\n  'TANNA',\n  'AMORA',\n  'AMORA_MIDRASH',\n  'STAM',\n  'STAM_MIDRASH',\n  'STAM_AMORA',\n  'CLEAR',\n];\nconst clearAllInLineStyles = (editorState) =>\n  removeInlineStyles(editorState, allStyles);\nconst removePrimaryInLineStyles = (editorState) =>\n  removeInlineStyles(editorState, primaryStyles);\n","import React from 'react';\nimport './css/GraphContextMenu.css';\nimport { ContextMenu, MenuItem, SubMenu } from 'react-contextmenu';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const MODES = {\n  מקרה: { color: '#222255', types: ['arrow', 'box'] },\n  דין: { color: '#222255', types: ['arrow'] },\n  טעם: { color: '#222255', types: ['arrow'] },\n  כותרת: { color: '#222255', types: ['arrow', 'box'] },\n  מעשה: { color: '#222255', types: ['arrow', 'box'] },\n  אמירה: { color: '#ee6677', types: ['arrow', 'box'] },\n  שאלה: { color: '#ee6677', types: ['arrow', 'box'] },\n  תשובה: { color: '#ee6677', types: ['arrow'] },\n  קושיא: { color: '#ee6677', types: ['arrow'] },\n  תירוץ: { color: '#ee6677', types: ['arrow'] },\n  ראיה: { color: '#ee6677', types: ['arrow'] },\n  סיוע: { color: '#ee6677', types: ['arrow'] },\n  אגדה: { color: '#ee6677', types: ['arrow', 'box'] },\n  אוקימתא: { color: '#ee6677', types: ['arrow'] },\n};\n\nconst LAYOUT = {\n  mishnah: ['מקרה', 'דין', 'טעם', 'כותרת', 'מעשה', 'אוקימתא'],\n  talmud: [\n    'אמירה',\n    'שאלה',\n    'תשובה',\n    'קושיא',\n    'תירוץ',\n    'ראיה',\n    'סיוע',\n    'אגדה',\n    'אוקימתא',\n  ],\n};\n\nexport const NodeMenuId = 'node_menu';\n\nexport default function GraphContextMenu() {\n  // updates State and changes cursor color\n  const handleClick = (event, data, element) => {\n    const { target, label, type, dispatch } = data;\n    const { id } = element.firstChild;\n    // document.body.style.cursor = `url(${cursor}), auto`;\n    if (type === 'arrow') {\n      dispatch({ type: 'setMode', payload: { label, id } });\n    } else {\n      dispatch({ type: 'setBox', payload: { label, id } });\n    }\n  };\n\n  const removeBox = (event, data, element) => {\n    const { target, dispatch } = data;\n    const { id } = element.firstChild;\n    dispatch({ type: 'removeBox', payload: { id } });\n  };\n  const dispatch = useDispatch();\n\n  return (\n    <ContextMenu id={NodeMenuId} className=\"context-menu\">\n      <MenuItem onClick={removeBox} data={{ dispatch }} key={'remove'}>\n        {'Remove Box'}\n      </MenuItem>\n\n      {Object.keys(LAYOUT).map((book) => (\n        <SubMenu title={book} key={book}>\n          {LAYOUT[book].map((label) => (\n            <SubMenu title={label} key={label}>\n              {MODES[label].types.map((type) => (\n                <MenuItem\n                  onClick={handleClick}\n                  data={{ label, type, dispatch }}\n                  key={type}\n                >\n                  {type}\n                </MenuItem>\n              ))}\n            </SubMenu>\n          ))}\n        </SubMenu>\n      ))}\n    </ContextMenu>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { convertFromRaw, Editor, EditorState } from 'draft-js';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport React from 'react';\nimport Draggable from 'react-draggable';\nimport { NodeMenuId, MODES } from './GraphContextMenu';\nimport './css/Nodes.css';\nimport { styleMap } from '../blocks/Text';\n\nconst Node = (props) => {\n  const { id } = props;\n  const dispatch = useDispatch();\n  const position = useSelector((state) => state.blocks.present.positions[id]);\n  const txt = useSelector((state) => state.blocks.present.txts[id]);\n  const label = useSelector((state) => state.blocks.present.graph.boxes[id]);\n  const selectedNode = useSelector(\n    (state) => state.blocks.present.graph.selectedNode\n  );\n  let style = {};\n  if (selectedNode === id) {\n    style = { borderColor: 'gold', backgroundColor: 'gold' };\n  }\n\n  // determines style for border of node\n  let border = '';\n  if (label) {\n    border = MODES[label].color;\n    style.borderColor = border;\n  } else {\n    border = '';\n  }\n  const handleDrag = (e, d) => {\n    dispatch({\n      type: 'updatePosition',\n      payload: {\n        id,\n        x: d.lastX + d.deltaX,\n        y: d.lastY + d.deltaY,\n      },\n    });\n  };\n  const [x, y] = position;\n  return (\n    <ContextMenuTrigger id={NodeMenuId} key={id}>\n      <Draggable\n        onStop={handleDrag}\n        onDrag={handleDrag}\n        key={id}\n        defaultPosition={{ x, y }}\n        position={{ x, y }}\n      >\n        <fieldset className=\"node\" id={id} style={style}>\n          <legend className=\"label\" style={{ color: border }}>\n            {label}\n          </legend>\n          <Editor\n            readOnly\n            customStyleMap={styleMap}\n            editorState={EditorState.createWithContent(\n              convertFromRaw(JSON.parse(txt))\n            )}\n            onChange={() => {}}\n          />\n        </fieldset>\n      </Draggable>\n    </ContextMenuTrigger>\n  );\n};\n\nexport default function Nodes() {\n  const order = useSelector((state) => state.blocks.present.order);\n  const nodes = order.map((id) => <Node id={id} key={id} />);\n  return nodes;\n}\n","import { useSelector } from 'react-redux';\nimport React from 'react';\nimport Xarrow from 'react-xarrows';\n\nexport default function SequentialPath() {\n  const order = useSelector((state) => state.blocks.present.order);\n  // triggers re-render on state change\n  const positions = useSelector((state) => state.blocks.present.positions);\n\n  const links = {};\n  for (let i = 0; i < order.length - 1; i += 1) {\n    links[order[i]] = order[i + 1];\n  }\n\n  const path = [];\n  Object.keys(links).forEach((key) =>\n    path.push(\n      <Xarrow\n        key={key}\n        start={key}\n        end={links[key]}\n        strokeWidth={1}\n        lineColor=\"grey\"\n        headColor=\"grey\"\n        dashness\n      />\n    )\n  );\n  return path;\n}\n","import React from 'react';\nimport { ContextMenu, MenuItem } from 'react-contextmenu';\nimport { useDispatch } from 'react-redux';\n\nexport const ConnectionMenuId = 'connection_menu';\n\nexport default function ConnectionContextMenu() {\n  // updates State and changes cursor color\n  const handleClick = (event, data, element) => {\n    const { target, reducerType, dispatch } = data;\n    const { id } = target.parentElement.parentElement;\n    dispatch({ type: reducerType, payload: {id}  });\n  };\n  const dispatch = useDispatch();\n  return (\n    <ContextMenu id={ConnectionMenuId}>\n        <MenuItem\n          onClick={handleClick}\n          data={{reducerType: \"deleteConnection\", dispatch: dispatch}}\n          key='deleteConnection'\n          >\n          {\"Delete\"}\n        </MenuItem>\n    </ContextMenu>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction returnNodeParent(target) {\n  // returns closest parent of target if\n  // if parent is class 'node' or 'react-contextmenu-item\n  if (target === document) {\n    return false;\n  }\n  if (target.classList.contains('react-contextmenu-item')) {\n    return target;\n  }\n  if (target.classList.contains('node')) {\n    return target;\n  }\n  return returnNodeParent(target.parentNode);\n}\n\nfunction onClick(event, graph, dispatch) {\n  const target = returnNodeParent(event.target);\n\n  if (target === false) {\n    dispatch({ type: 'resetMode' });\n  } else if (target.classList[0] === 'react-contextmenu-item') {\n    // Entered Connection Mode\n  } else if (target.classList[0] === 'node') {\n    if (graph.selectedNode !== null) {\n      // console.log('In Connection Mode');\n      if (graph.selectedNode === target.id) {\n        // console.log('Same ID Clicked');\n      } else if (graph.connections.includes([graph.selectedNode, target.id])) {\n        // console.log('Connection Already in Present');\n      } else {\n        dispatch({\n          type: 'addConnection',\n          payload: {\n            connection: [graph.selectedNode, target.id, graph.mode],\n          },\n        });\n      }\n    }\n    dispatch({ type: 'resetMode' });\n  }\n}\n\nexport default function ConnectionListener() {\n  const graph = useSelector((state) => state.blocks.present.graph);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    function f(e) {\n      return onClick(e, graph, dispatch);\n    }\n    document.addEventListener('click', f);\n    return () => {\n      document.removeEventListener('click', f);\n    };\n  }, [graph]);\n  return <></>;\n}\n","import { useSelector } from 'react-redux';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport React from 'react';\nimport Xarrow from 'react-xarrows';\nimport { MODES } from './GraphContextMenu';\nimport { ConnectionMenuId } from './ConnectionContextMenu';\nimport './css/Connections.css';\n\nexport default function NodeConnections() {\n  const connections = useSelector(\n    (state) => state.blocks.present.graph.connections\n  );\n  // triggers re-render on state change\n  const positions = useSelector((state) => state.blocks.present.positions);\n  const anchors = {};\n  return connections.map((connection) => {\n    const start = connection[0];\n    const end = connection[1];\n    const mode = connection[2];\n\n    anchors.hasOwnProperty(start)\n      ? (anchors[start] += 1)\n      : (anchors[start] = 1);\n    anchors.hasOwnProperty(end) ? (anchors[end] += 1) : (anchors[end] = 1);\n    // start and end offsets begin at index 1 (leaves room for sequential path)\n\n    // console.log(anchors);\n    let sideStartOffset = anchors[start];\n    if (sideStartOffset % 2 === 0) {\n      sideStartOffset /= -2;\n    } else {\n      sideStartOffset += 1;\n      sideStartOffset /= 2;\n    }\n    let sideEndOffset = anchors[end];\n    if (sideEndOffset % 2 === 0) {\n      sideEndOffset /= -2;\n    } else {\n      sideEndOffset += 1;\n      sideEndOffset /= 2;\n    }\n    // console.log(anchors)\n\n    const longStartOffset = anchors[start];\n\n    const yspacing = 10;\n    const xspacing = 10;\n    console.log(mode, MODES);\n\n    return (\n      <ContextMenuTrigger id={ConnectionMenuId} key={start + end + mode}>\n        <Xarrow\n          key={start + end + mode}\n          id={start + end + mode}\n          start={start}\n          end={end}\n          startAnchor={[\n            {\n              position: 'right',\n              offset: { bottomness: yspacing * sideStartOffset, rightness: 0 },\n            },\n            {\n              position: 'left',\n              offset: { bottomness: yspacing * sideStartOffset, rightness: 0 },\n            },\n            {\n              position: 'bottom',\n              offset: { bottomness: 0, rightness: xspacing * sideStartOffset },\n            },\n            {\n              position: 'top',\n              offset: { bottomness: 0, rightness: xspacing * sideStartOffset },\n            },\n          ]}\n          endAnchor={[\n            {\n              position: 'right',\n              offset: { bottomness: yspacing * sideEndOffset, rightness: 0 },\n            },\n            {\n              position: 'left',\n              offset: { bottomness: yspacing * sideEndOffset, rightness: 0 },\n            },\n            {\n              position: 'bottom',\n              offset: { bottomness: 0, rightness: xspacing * sideEndOffset },\n            },\n            {\n              position: 'top',\n              offset: { bottomness: 0, rightness: xspacing * sideEndOffset },\n            },\n          ]}\n          strokeWidth={3}\n          headSize={5}\n          lineColor={MODES[mode].color}\n          headColor={MODES[mode].color}\n          arrowBodyProps={{ className: 'arrow_body' }}\n          arrowHeadProps={{ className: 'arrow_head' }}\n          SVGcanvasProps={{ className: 'svg' }}\n          // path=\"grid\"\n          label={{\n            middle: (\n              <div\n                className=\"arrow_label\"\n                style={{\n                  color: MODES[mode].color,\n                  transform: 'translate(100%, 0%)',\n                }}\n              >\n                {mode[0]}\n              </div>\n            ),\n          }}\n        />\n      </ContextMenuTrigger>\n    );\n  });\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './DownloadButton.css';\n\nfunction downloadObjectAsJson(exportObj, exportName) {\n  let dataStr =\n    'data:text/json;charset=utf-8,' +\n    encodeURIComponent(JSON.stringify(exportObj));\n  let downloadAnchorNode = document.createElement('a');\n  downloadAnchorNode.setAttribute('href', dataStr);\n  downloadAnchorNode.setAttribute('download', exportName + '.json');\n  document.body.appendChild(downloadAnchorNode); // required for firefox\n  downloadAnchorNode.click();\n  downloadAnchorNode.remove();\n}\n\nexport function SaveState() {\n  const s = useSelector((state) => state.blocks.present);\n  // const positions = useSelector((state) => state.blocks.present.positions);\n  const [name, setName] = useState('');\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    downloadObjectAsJson(s, name);\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        {'Save File '}\n        <input\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n      </label>\n      <input type=\"submit\" value=\"Save\" />\n    </form>\n  );\n}\n\nexport function LoadState() {\n  const dispatch = useDispatch();\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    // console.log(file.name);\n    const file = document.getElementById('file').files[0];\n    if (!file) {\n      return;\n    }\n    let reader = new FileReader();\n    reader.readAsText(file);\n    reader.onload = function () {\n      const state = JSON.parse(reader.result);\n      console.log(state);\n      dispatch({\n        type: 'loadState',\n        payload: {\n          state,\n        },\n      });\n    };\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"file\" id=\"file\" name=\"file\" className=\"inputfile\" />\n      {/* <label for=\"file\">Load File:</label> */}\n      <input type=\"submit\" value=\"Load\" />\n    </form>\n  );\n}\n","import './App.css';\nimport React from 'react';\nimport Blocks from './features/blocks/Blocks';\nimport HeaderButtons from './features/HeaderButtons/HeaderButtons';\nimport Graph from './features/graph/Graph';\nimport { SaveState, LoadState } from './features/HeaderButtons/DownloadButton';\n\nfunction App() {\n  return (\n    <div className=\"Page\">\n      <div className=\"App\">\n        <div className=\"load_save_buttons\">\n          <SaveState />\n          <LoadState />\n        </div>\n        <div className=\"graph\">{Graph()}</div>\n        <div className=\"right_buttons\">\n          <HeaderButtons />\n        </div>\n        <div className=\"right_panel\">\n          <Blocks />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport './css/Graph.css';\nimport Nodes from './Nodes';\nimport SequentialPath from './SequentialPath';\nimport GraphContextMenu from './GraphContextMenu';\nimport ConnectionContextMenu from './ConnectionContextMenu';\nimport ConnectionListener from './ConnectionListener';\nimport NodeConnections from './Connections';\n\nexport default function Graph() {\n  return (\n    <>\n      <div className=\"canvas\">\n        <Nodes />\n        <SequentialPath />\n        <NodeConnections />\n      </div>\n      <GraphContextMenu />\n      <ConnectionContextMenu />\n      <ConnectionListener />\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { nanoid } from '@reduxjs/toolkit';\nimport {\n  EditorState,\n  SelectionState,\n  convertToRaw,\n  convertFromRaw,\n  Modifier,\n} from 'draft-js';\n\nconst initialState = {\n  caret: -1,\n  activeId: 'id1',\n  order: ['id1'],\n  txts: {\n    id1: JSON.stringify(\n      convertToRaw(EditorState.createEmpty().getCurrentContent())\n    ),\n  },\n  splits: { id1: { slice1: 0, slice2: 0 } },\n  selections: {\n    id1: { anchorKey: 0, anchorOffset: 0, focusKey: 0, focusOffset: 0 },\n  },\n  notes: { id1: '' },\n  views: { id1: false },\n  positions: { id1: [0, 0] },\n  graph: { connections: [], mode: null, selectedNode: null, boxes: {} },\n};\n\nexport default function BlocksReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'loadState':\n      return action.payload.state;\n    case 'updateId':\n      return {\n        ...state,\n        caret: action.payload.caret,\n        activeId: action.payload.id,\n      };\n    case 'updateText':\n      return {\n        ...state,\n        txts: { ...state.txts, [action.payload.id]: action.payload.txt },\n        splits: { ...state.splits, [action.payload.id]: action.payload.split },\n        selections: {\n          ...state.selections,\n          [action.payload.id]: action.payload.selection,\n        },\n      };\n    case 'updateSelection':\n      return {\n        ...state,\n        splits: { ...state.splits, [action.payload.id]: action.payload.split },\n        selections: {\n          ...state.selections,\n          [action.payload.id]: action.payload.selection,\n        },\n      };\n    case 'splitText': {\n      // Initialize ids, texts, and order\n      const id1 = action.payload.id;\n      const index = state.order.indexOf(id1);\n      const id2 = nanoid();\n      const textOne = state.splits[id1]['slice1'];\n      const textTwo = state.splits[id1]['slice2'];\n      const newOrder = [...state.order];\n      newOrder.splice(index + 1, 0, id2);\n\n      // Set new position of node in graph\n      const pos = state.positions[id1];\n      const height = document.getElementsByClassName('node').namedItem(id1)\n        .clientHeight;\n      const newPosition = [pos[0], pos[1] + height + 15];\n      const currentPositions = Object.values(state.positions);\n\n      // Updates new node position if new node is on top of existing node\n      let i = 0;\n      while (\n        currentPositions.filter(\n          (p) => JSON.stringify(p) === JSON.stringify(newPosition)\n        ).length > 0\n      ) {\n        i += 1;\n        newPosition[0] += 15;\n        newPosition[1] += 15;\n        if (i > 5) {\n          // Stops after five attempts to change position\n          break;\n        }\n      }\n\n      // Create and Return new state\n      return {\n        ...state,\n        activeId: id2,\n        order: newOrder,\n        txts: {\n          ...state.txts,\n          [id1]: textOne,\n          [id2]: textTwo,\n        },\n        splits: {\n          ...state.splits,\n          [id1]: { slice1: textOne, slice2: textOne },\n          [id2]: { slice1: textTwo, slice2: textTwo },\n        },\n        notes: { ...state.notes, [id2]: '' },\n        views: { ...state.views, [id2]: false },\n        positions: { ...state.positions, [id2]: newPosition },\n      };\n    }\n    case 'mergeText': {\n      const id2 = action.payload.id;\n      const idx = state.order.indexOf(id2);\n      if (idx === 0) {\n        return state; // not possible to merge up first block\n      }\n      const id1 = state.order[idx - 1];\n      const newOrder = [...state.order];\n      newOrder.splice(idx, 1);\n\n      // Move merged connections\n      let newConnections = state.graph.connections\n        .map((connection) =>\n          connection.map((id) => {\n            if (id === id2) {\n              return id1;\n            }\n            return id;\n          })\n        )\n        .filter((connection) => connection[0] !== connection[1]);\n      // Remove Duplicate connections\n      const s = new Set(newConnections.map((array) => array.join()));\n      newConnections = [...s].map((array) => array.split(','));\n\n      // Creates Merged Content State\n      const contentState1 = convertFromRaw(JSON.parse(state.txts[id1]));\n      const contentState2 = convertFromRaw(JSON.parse(state.txts[id2]));\n      const selectionState2 = EditorState.createWithContent(\n        contentState2\n      ).getSelection();\n      const firstBlockKey = selectionState2.getAnchorKey();\n      const insertionSelectionState = SelectionState.createEmpty(\n        'blockkey'\n      ).merge({\n        anchorKey: firstBlockKey,\n        anchorOffset: 0,\n        focusKey: firstBlockKey,\n        focusOffset: 0,\n      });\n      const mergedContent = Modifier.replaceWithFragment(\n        contentState2,\n        insertionSelectionState,\n        contentState1.getBlockMap()\n      );\n\n      return {\n        ...state,\n        activeId: id1,\n        order: newOrder,\n        txts: {\n          ...state.txts,\n          [id1]: JSON.stringify(convertToRaw(mergedContent)),\n        },\n        splits: {\n          ...state.splits,\n          [id1]: { slice1: 0, slice2: 0 },\n        },\n        notes: {\n          ...state.notes,\n          [id1]: state.notes[id1] + state.notes[id2],\n        },\n        graph: { ...state.graph, connections: newConnections },\n      };\n    }\n    case 'toggleNote': {\n      const { id } = action.payload;\n      return { ...state, views: { ...state.views, [id]: !state.views[id] } };\n    }\n    case 'updateNote': {\n      const { id } = action.payload;\n      const e = document.activeElement;\n      return { ...state, notes: { ...state.notes, [id]: e.value } };\n    }\n    case 'updatePosition': {\n      const { id, x, y } = action.payload;\n      return { ...state, positions: { ...state.positions, [id]: [x, y] } };\n    }\n    case 'setMode':\n      return {\n        ...state,\n        graph: {\n          ...state.graph,\n          mode: action.payload.label, // bad variables names\n          selectedNode: action.payload.id,\n        },\n      };\n    case 'resetMode':\n      return {\n        ...state,\n        graph: { ...state.graph, mode: null, selectedNode: null },\n        mode: '',\n        id: null,\n      };\n    case 'setBox': {\n      const { label, id } = action.payload;\n      return {\n        ...state,\n        graph: { ...state.graph, boxes: { ...state.graph.boxes, [id]: label } },\n      };\n    }\n    case 'removeBox': {\n      const { id } = action.payload;\n      const boxes = { ...state.graph.boxes };\n      delete boxes[id];\n      return {\n        ...state,\n        graph: { ...state.graph, boxes: { ...boxes } },\n      };\n    }\n    case 'addConnection':\n      // Verify that connection does not already exist\n      if (\n        state.graph.connections.filter(\n          (c) => c.toString() === action.payload.connection.toString()\n        ).length > 0 &&\n        state.graph.connections.length > 0\n      ) {\n        return state;\n      }\n      // Add connection\n      return {\n        ...state,\n        graph: {\n          ...state.graph,\n          connections: [...state.graph.connections, action.payload.connection],\n        },\n      };\n    case 'deleteConnection': {\n      const newConnections = state.graph.connections.filter(\n        (connection) =>\n          connection[0] + connection[1] + connection[2] !== action.payload.id\n      );\n      return {\n        ...state,\n        graph: { ...state.graph, connections: newConnections },\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const ArgButtonsSlice = createSlice({\n  name: 'args',\n  initialState: {\n    connection_color: null, // color of current selected arrow type\n    tail_selected: false, // specifies if prior click was on valid node\n    tail_id: null, // id of prior node click\n  },\n  reducers: {\n    updateColor: (state, action) => {\n      state.connection_color = action.color;\n      state.tail_selected = false;\n      state.tail_id = null;\n    },\n    updateTail: (state, action) => {\n      state.tail_selected = true;\n      state.tail_id = action.id;\n    },\n    resetToDragging: (state) => {\n      state.connection_color = null;\n      state.tail_selected = false;\n      state.tail_id = null;\n    },\n  },\n});\n\nexport const {\n  updateColor,\n  updateTail,\n  resetToDragging,\n} = ArgButtonsSlice.actions;\nexport default ArgButtonsSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport undoable, { excludeAction } from 'redux-undo';\nimport blocksReducer from '../features/blocks/BlocksReducer';\nimport ArgsButtonsReducer from '../features/ArgButtons/ArgButtonsSlice';\n\nexport default configureStore({\n  reducer: {\n    blocks: undoable(blocksReducer, {\n      filter: excludeAction([\n        'updateId',\n        'updateCaret',\n        'updatePosition',\n        'toggleNote',\n        'updateNote',\n        'resetMode',\n        'setMode',\n        'updateSelection',\n      ]),\n    }),\n    args: ArgsButtonsReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './app/store';\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}