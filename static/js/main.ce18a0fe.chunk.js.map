{"version":3,"sources":["features/blocks/Note.js","features/blocks/helpers.js","config/HistoricalStyles.js","features/blocks/Text.js","features/blocks/Blocks.js","features/HeaderButtons/HeaderButtons.js","features/graph/GraphContextMenu.js","features/graph/Nodes.js","features/graph/SequentialPath.js","features/graph/ConnectionContextMenu.js","features/graph/ConnectionListener.js","features/graph/Connections.js","features/graph/Graph.js","features/HeaderButtons/DownloadButton.js","App.js","reportWebVitals.js","features/blocks/BlocksReducer.js","features/ArgButtons/ArgButtonsSlice.js","app/store.js","index.js"],"names":["Note","id","note","useSelector","state","blocks","present","notes","view","views","dispatch","useDispatch","undefined","className","onSelect","type","payload","onChange","onClick","e","ctrlKey","metaKey","shiftKey","value","ToggleNoteButton","checked","uncheckedIcon","checkedIcon","onColor","onHandleColor","offColor","boxShadow","activeBoxShadow","height","width","splitState","caret","getSelection","getAnchorOffset","end","getCurrentContent","getPlainText","length","currentBlockKey","getAnchorKey","lastBlockKey","getLastBlock","key","firstBlockKey","getFirstBlock","selectionSlice1","SelectionState","createEmpty","merge","anchorKey","anchorOffset","focusOffset","focusKey","selectionSlice2","contentSlice2","Modifier","removeRange","contentSlice1","slice1","JSON","stringify","convertToRaw","slice2","getSelectionInfo","selection","getFocusKey","getFocusOffset","isBackward","createSelection","TANNA","backgroundColor","AMORA","STAM","AMORA_MIDRASH","borderBottom","STAM_MIDRASH","STAM_AMORA","TANAKH","fontWeight","CLEAR","color","TextField","txt","txts","selectionInfo","selections","reduxEditorState","EditorState","forceSelection","createWithContent","convertFromRaw","parse","useState","localEditorState","setEditorState","activeId","domEditor","useEffect","focus","onBlur","ref","customStyleMap","HistoricalStyles","editorState","justSelection","split","Blocks","order","map","removeInlineStyles","styles","contentState","contentWithoutStyles","reduce","newContentState","style","removeInlineStyle","push","allStyles","primaryStyles","MergeButton","onMouseDown","event","preventDefault","document","activeElement","getAttribute","parentElement","SplitButton","RedoButton","ActionCreators","redo","UndoButton","undo","HistoricalLayerButton","props","dataStyle","data-style","onMouseUp","currentTarget","newSelectionState","newEditorState","acceptSelection","originalContentHash","getBlockMap","clearer","layerable","removePrimaryInLineStyles","RichUtils","toggleInlineStyle","getKey","name","HeaderButtons","MODES","מקרה","types","דין","טעם","כותרת","מעשה","כלל","אמירה","שאלה","תשובה","קושיא","תירוץ","ראיה","סיוע","אגדתא","אוקימתא","LAYOUT","Tannaitic","Talmud","NodeMenuId","GraphContextMenu","handleClick","data","element","target","label","firstChild","hideOnLeave","Object","keys","book","title","Node","position","positions","graph","boxes","selectedNode","borderColor","border","handleDrag","d","x","lastX","deltaX","y","lastY","deltaY","holdToDisplay","onStop","onDrag","defaultPosition","readOnly","Nodes","SequentialPath","links","i","path","forEach","start","strokeWidth","lineColor","headColor","dashness","ConnectionMenuId","ConnectionContextMenu","reducerType","returnNodeParent","classList","contains","parentNode","connections","includes","connection","mode","ConnectionListener","f","addEventListener","removeEventListener","NodeConnections","anchors","hasOwnProperty","sideStartOffset","sideEndOffset","console","log","startAnchor","offset","bottomness","rightness","endAnchor","headSize","arrowBodyProps","arrowHeadProps","SVGcanvasProps","middle","transform","Graph","SaveState","s","setName","onSubmit","evt","exportObj","exportName","dataStr","encodeURIComponent","downloadAnchorNode","createElement","setAttribute","body","appendChild","click","remove","downloadObjectAsJson","LoadState","file","getElementById","files","reader","FileReader","readAsText","onload","result","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","id1","splits","ArgButtonsSlice","createSlice","connection_color","tail_selected","tail_id","reducers","updateColor","action","updateTail","resetToDragging","actions","configureStore","reducer","undoable","index","indexOf","id2","nanoid","textOne","textTwo","newOrder","splice","textOneLength","textTwoLength","newNode1Height","getElementsByClassName","namedItem","clientHeight","pos","newPosition","currentPositions","values","filter","p","idx","newConnections","Set","array","join","contentState1","contentState2","selectionState2","insertionSelectionState","mergedContent","replaceWithFragment","c","toString","excludeAction","args","ArgsButtonsReducer","ReactDOM","render","store"],"mappings":"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","file":"static/js/main.ce18a0fe.chunk.js","sourcesContent":["import React from 'react';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport './Blocks.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Switch from 'react-switch';\n\nfunction Note({ id }) {\n  const note = useSelector((state) => state.blocks.present.notes[id]);\n  const view = useSelector((state) => state.blocks.present.views[id]);\n  const dispatch = useDispatch();\n  if (view === false || view === undefined) {\n    return <div />;\n  }\n  return (\n    <TextareaAutosize\n      id={id}\n      className=\"note\"\n      onSelect={() => dispatch({ type: 'updateNote', payload: { id } })}\n      onChange={() => dispatch({ type: 'updateNote', payload: { id } })}\n      onClick={(e) => {\n        if (e.ctrlKey || e.metaKey || e.shiftKey) return 0; // ignore shift clicks\n        dispatch({ type: 'updateNote', payload: { id } });\n      }}\n      value={note}\n    />\n  );\n}\n\nfunction ToggleNoteButton({ id }) {\n  const checked = useSelector((state) => state.blocks.present.views[id]);\n  const dispatch = useDispatch();\n  return (\n    <Switch\n      checked={checked}\n      onChange={() => dispatch({ type: 'toggleNote', payload: { id } })}\n      uncheckedIcon={false}\n      checkedIcon={false}\n      className=\"switch\"\n      onColor=\"#222255\"\n      onHandleColor=\"#ffffff\"\n      offColor=\"#888888\"\n      boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n      activeBoxShadow=\"0px 0px 1px 1px rgba(0, 0, 0, 0.2)\"\n      height={10}\n      width={20}\n    />\n  );\n}\n\nexport { Note, ToggleNoteButton };\n","import { SelectionState, Modifier, convertToRaw } from 'draft-js';\n\nexport function splitState(state) {\n  const caret = state.getSelection().getAnchorOffset();\n  const end = state.getCurrentContent().getPlainText().length;\n\n  const currentBlockKey = state.getSelection().getAnchorKey();\n  const lastBlockKey = state.getCurrentContent().getLastBlock().key;\n  const firstBlockKey = state.getCurrentContent().getFirstBlock().key;\n\n  const selectionSlice1 = SelectionState.createEmpty('blockkey').merge({\n    anchorKey: currentBlockKey,\n    anchorOffset: caret,\n    focusOffset: end,\n    focusKey: lastBlockKey,\n  });\n  const selectionSlice2 = SelectionState.createEmpty('blockkey').merge({\n    anchorKey: firstBlockKey,\n    anchorOffset: 0,\n    focusKey: currentBlockKey,\n    focusOffset: caret,\n  });\n\n  const contentSlice2 = Modifier.removeRange(\n    state.getCurrentContent(),\n    selectionSlice2,\n    'forward'\n  );\n  const contentSlice1 = Modifier.removeRange(\n    state.getCurrentContent(),\n    selectionSlice1,\n    'forward'\n  );\n\n  return {\n    slice1: JSON.stringify(convertToRaw(contentSlice1)),\n    slice2: JSON.stringify(convertToRaw(contentSlice2)),\n  };\n}\n\nexport function getSelectionInfo(state) {\n  const selection = state.getSelection();\n  return {\n    anchorKey: selection.getAnchorKey(),\n    anchorOffset: selection.getAnchorOffset(),\n    focusKey: selection.getFocusKey(),\n    focusOffset: selection.getFocusOffset(),\n    isBackward: selection.isBackward,\n  };\n}\n\nexport function createSelection({\n  anchorKey,\n  anchorOffset,\n  focusKey,\n  focusOffset,\n  isBackward,\n}) {\n  return SelectionState.createEmpty('blockkey').merge({\n    anchorKey,\n    anchorOffset,\n    focusKey,\n    focusOffset,\n    isBackward,\n  });\n}\n","export default {\n  TANNA: {\n    backgroundColor: '#BBCCEE',\n  },\n  AMORA: {\n    backgroundColor: '#ccddaa',\n  },\n  STAM: {\n    backgroundColor: '#ffcccc',\n  },\n  AMORA_MIDRASH: {\n    backgroundColor: '#BBCCEE',\n    borderBottom: '.2em solid #228833',\n  },\n  STAM_MIDRASH: {\n    backgroundColor: '#BBCCEE',\n    borderBottom: '.2em solid #ee6677',\n  },\n  STAM_AMORA: {\n    backgroundColor: '#ccddaa',\n    borderBottom: '.2em solid #ee6677',\n  },\n  TANAKH: {\n    fontWeight: 'bold',\n  },\n  CLEAR: {\n    color: 'black',\n  },\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Editor,\n  EditorState,\n  convertToRaw,\n  convertFromRaw,\n  SelectionState,\n} from 'draft-js';\nimport { splitState, getSelectionInfo, createSelection } from './helpers';\nimport './Blocks.css';\nimport HistoricalStyles from '../../config/HistoricalStyles';\n\nexport default function TextField({ id }) {\n  const txt = useSelector((state) => state.blocks.present.txts[id]);\n  // const activeId = useSelector((state) => state.blocks.present.activeId);\n  const selectionInfo = useSelector(\n    (state) => state.blocks.present.selections[id]\n  );\n  let selection = null;\n  if (selectionInfo == null) {\n    selection = SelectionState.createEmpty();\n  } else {\n    selection = createSelection(selectionInfo);\n  }\n  const reduxEditorState = EditorState.forceSelection(\n    EditorState.createWithContent(convertFromRaw(JSON.parse(txt))),\n    selection\n  );\n  const [localEditorState, setEditorState] = useState(() =>\n    EditorState.forceSelection(\n      EditorState.createWithContent(convertFromRaw(JSON.parse(txt))),\n      selection\n    )\n  );\n  const dispatch = useDispatch();\n\n  // Force local state to always be reduxEditorState on rerender\n  if (\n    txt !== JSON.stringify(convertToRaw(localEditorState.getCurrentContent()))\n  ) {\n    setEditorState(reduxEditorState);\n  }\n  // Force focus after (re)render\n  const activeId = useSelector((state) => state.blocks.present.activeId);\n  let domEditor = 0;\n  const setDomEditorRef = (ref) => (domEditor = ref);\n  useEffect(() => {\n    // Forces focus to component if active\n    if (activeId === id) {\n      domEditor.focus();\n    }\n  });\n\n  return (\n    <>\n      <div\n        className=\"text_editor\"\n        id={id}\n        onBlur={() =>\n          dispatch({\n            type: 'updateId',\n            payload: {\n              id: null,\n            },\n          })\n        }\n      >\n        <Editor\n          ref={setDomEditorRef}\n          customStyleMap={HistoricalStyles}\n          editorState={localEditorState}\n          onChange={(state) => {\n            const justSelection =\n              state.getCurrentContent().getPlainText() ===\n              localEditorState.getCurrentContent().getPlainText();\n            setEditorState(state);\n            if (justSelection) {\n              // UpdateSelection action is excluded from undo/redo\n              dispatch({\n                type: 'updateSelection',\n                payload: {\n                  id,\n                  split: splitState(state),\n                  selection: getSelectionInfo(state),\n                },\n              });\n            } else {\n              dispatch({\n                type: 'updateText',\n                payload: {\n                  id,\n                  txt: JSON.stringify(convertToRaw(state.getCurrentContent())),\n                  split: splitState(state),\n                  selection: getSelectionInfo(state),\n                },\n              });\n            }\n          }}\n        />\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Note, ToggleNoteButton } from './Note';\nimport TextField from './Text';\nimport './Blocks.css';\n\nexport default function Blocks() {\n  const order = useSelector((state) => state.blocks.present.order);\n\n  const blocks = order.map((id) => (\n    <div className=\"block\" key={id}>\n      <TextField id={id} />\n      <ToggleNoteButton id={id} />\n      <Note id={id} />\n    </div>\n  ));\n  return blocks;\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './HeaderButtons.css';\nimport { ActionCreators } from 'redux-undo';\nimport {\n  EditorState,\n  RichUtils,\n  convertFromRaw,\n  convertToRaw,\n  Modifier,\n} from 'draft-js';\nimport {\n  splitState,\n  createSelection,\n  getSelectionInfo,\n} from '../blocks/helpers';\nimport HistoricalStyles from '../../config/HistoricalStyles';\n\nconst removeInlineStyles = (editorState, styles) => {\n  const contentState = editorState.getCurrentContent();\n  const contentWithoutStyles = styles.reduce(\n    (newContentState, style) =>\n      Modifier.removeInlineStyle(\n        newContentState,\n        editorState.getSelection(),\n        style\n      ),\n    contentState\n  );\n\n  const newEditorState = EditorState.push(\n    editorState,\n    contentWithoutStyles,\n    'change-inline-style'\n  );\n\n  return newEditorState;\n};\n\nconst allStyles = [\n  'TANNA',\n  'AMORA',\n  'AMORA_MIDRASH',\n  'STAM',\n  'STAM_MIDRASH',\n  'STAM_AMORA',\n  'CLEAR',\n  'TANAKH',\n];\n\nconst primaryStyles = [\n  'TANNA',\n  'AMORA',\n  'AMORA_MIDRASH',\n  'STAM',\n  'STAM_MIDRASH',\n  'STAM_AMORA',\n  'CLEAR',\n];\nconst clearAllInLineStyles = (editorState) =>\n  removeInlineStyles(editorState, allStyles);\nconst removePrimaryInLineStyles = (editorState) =>\n  removeInlineStyles(editorState, primaryStyles);\n\nexport function MergeButton() {\n  const dispatch = useDispatch();\n  return (\n    <button\n      type=\"button\"\n      onMouseDown={(event) => {\n        event.preventDefault();\n        if (\n          // verify active element is a Textfield Component\n          document.activeElement.getAttribute('class') !==\n          'notranslate public-DraftEditor-content'\n        ) {\n          return;\n        }\n        const {\n          id,\n        } = document.activeElement.parentElement.parentElement.parentElement;\n        dispatch({ type: 'mergeText', payload: { id } });\n      }}\n    >\n      merge\n    </button>\n  );\n}\n\nexport function SplitButton() {\n  const dispatch = useDispatch();\n  return (\n    <button\n      type=\"button\"\n      onMouseDown={(event) => {\n        event.preventDefault();\n        if (\n          // verify active element is a Textfield Component\n          document.activeElement.getAttribute('class') !==\n          'notranslate public-DraftEditor-content'\n        ) {\n          return;\n        }\n        const {\n          id,\n        } = document.activeElement.parentElement.parentElement.parentElement;\n        dispatch({ type: 'splitText', payload: { id } });\n      }}\n    >\n      split\n    </button>\n  );\n}\n\nexport function RedoButton() {\n  const dispatch = useDispatch();\n  return (\n    <button type=\"button\" onClick={() => dispatch(ActionCreators.redo())}>\n      redo\n    </button>\n  );\n}\n\nexport function UndoButton() {\n  const dispatch = useDispatch();\n  // const UndoButton = (\n  return (\n    <button\n      type=\"button\"\n      onClick={() => {\n        dispatch(ActionCreators.undo());\n      }}\n    >\n      undo\n    </button>\n  );\n}\n\nexport function HistoricalLayerButton(props) {\n  const dispatch = useDispatch();\n  const txts = useSelector((state) => state.blocks.present.txts);\n  const selections = useSelector((state) => state.blocks.present.selections);\n  return (\n    <button\n      style={HistoricalStyles[props.dataStyle]}\n      type=\"button\"\n      data-style={props.dataStyle}\n      onMouseUp={(event) => event.preventDefault()}\n      onMouseDown={(event) => {\n        event.preventDefault();\n        if (\n          // verify active element is a Textfield Component\n          document.activeElement.getAttribute('class') !==\n          'notranslate public-DraftEditor-content'\n        ) {\n          return;\n        }\n        const style = event.currentTarget.getAttribute('data-style');\n        const {\n          id,\n        } = document.activeElement.parentElement.parentElement.parentElement;\n\n        const contentState = convertFromRaw(JSON.parse(txts[id]));\n        let newSelectionState = createSelection(selections[id]);\n        let newEditorState = EditorState.createWithContent(contentState);\n        newEditorState = EditorState.acceptSelection(\n          newEditorState,\n          newSelectionState\n        );\n\n        const originalContentHash = JSON.stringify(\n          newEditorState.getCurrentContent().getBlockMap()\n        );\n\n        // inline style handing logic\n        if (props.clearer) {\n          newEditorState = clearAllInLineStyles(newEditorState);\n        } else if (props.layerable) {\n          // don't remove inline styles\n        } else {\n          newEditorState = removePrimaryInLineStyles(newEditorState);\n        }\n        newEditorState = RichUtils.toggleInlineStyle(newEditorState, style);\n\n        // check if the content styling would change.\n        // If it does, reset caret to 0\n        // and send update to redux store\n        const newContentHash = JSON.stringify(\n          newEditorState.getCurrentContent().getBlockMap()\n        );\n        if (originalContentHash != newContentHash) {\n          // saving original split before selection reset\n          const split = splitState(newEditorState);\n          // create reset caret selection\n          const key = newEditorState\n            .getCurrentContent()\n            .getFirstBlock()\n            .getKey();\n          newSelectionState = createSelection({\n            anchorKey: key,\n            anchorOffset: 0,\n            focusKey: key,\n            focusOffset: 0,\n            isBackward: false,\n          });\n          // force new selection\n          newEditorState = EditorState.forceSelection(\n            newEditorState,\n            newSelectionState\n          );\n          // dispatch update\n          dispatch({\n            type: 'updateText',\n            payload: {\n              id,\n              txt: JSON.stringify(\n                convertToRaw(newEditorState.getCurrentContent())\n              ),\n              split,\n              selection: getSelectionInfo(newEditorState),\n            },\n          });\n        }\n      }}\n    >\n      {props.name}\n    </button>\n  );\n}\n\nexport default function HeaderButtons() {\n  return (\n    <div className=\"header_buttons\">\n      <UndoButton />\n      <RedoButton />\n      <MergeButton />\n      <SplitButton />\n      <HistoricalLayerButton dataStyle=\"TANNA\" name=\"Tannaitic\" />\n      <HistoricalLayerButton dataStyle=\"AMORA\" name=\"Amoraic\" />\n      <HistoricalLayerButton dataStyle=\"STAM\" name=\"Stam\" />\n      <HistoricalLayerButton dataStyle=\"AMORA_MIDRASH\" name=\"T from A\" />\n      <HistoricalLayerButton dataStyle=\"STAM_MIDRASH\" name=\"T from S\" />\n      <HistoricalLayerButton dataStyle=\"STAM_AMORA\" name=\"A from S\" />\n      <HistoricalLayerButton\n        dataStyle=\"TANAKH\"\n        name=\"Tanakh\"\n        layerable={true}\n      />\n      <HistoricalLayerButton dataStyle=\"CLEAR\" name=\"Clear\" clearer={true} />\n    </div>\n  );\n}\n","import React from 'react';\nimport './css/GraphContextMenu.css';\nimport { ContextMenu, MenuItem, SubMenu } from 'react-contextmenu';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const MODES = {\n  מקרה: { color: '#222255', types: ['arrow', 'box'] },\n  דין: { color: '#222255', types: ['arrow'] },\n  טעם: { color: '#222255', types: ['arrow'] },\n  כותרת: { color: '#222255', types: ['arrow', 'box'] },\n  מעשה: { color: '#222255', types: ['arrow', 'box'] },\n  כלל: { color: '#222255', types: ['arrow', 'box'] },\n  אמירה: { color: '#ee6677', types: ['arrow', 'box'] },\n  שאלה: { color: '#ee6677', types: ['arrow', 'box'] },\n  תשובה: { color: '#ee6677', types: ['arrow'] },\n  קושיא: { color: '#ee6677', types: ['arrow'] },\n  תירוץ: { color: '#ee6677', types: ['arrow'] },\n  ראיה: { color: '#ee6677', types: ['arrow'] },\n  סיוע: { color: '#ee6677', types: ['arrow'] },\n  אגדתא: { color: '#ee6677', types: ['arrow', 'box'] },\n  אוקימתא: { color: '#ee6677', types: ['arrow'] },\n};\n\nconst LAYOUT = {\n  Tannaitic: ['מקרה', 'דין', 'טעם', 'כותרת', 'מעשה', 'אוקימתא', 'כלל'],\n  Talmud: [\n    'אמירה',\n    'שאלה',\n    'תשובה',\n    'קושיא',\n    'תירוץ',\n    'ראיה',\n    'סיוע',\n    'אגדתא',\n    'אוקימתא',\n  ],\n};\n\nexport const NodeMenuId = 'node_menu';\n\nexport default function GraphContextMenu() {\n  // updates State and changes cursor color\n  const handleClick = (event, data, element) => {\n    const { target, label, type, dispatch } = data;\n    const { id } = element.firstChild;\n    // document.body.style.cursor = `url(${cursor}), auto`;\n    if (type === 'arrow') {\n      dispatch({ type: 'setMode', payload: { label, id } });\n    } else {\n      dispatch({ type: 'setBox', payload: { label, id } });\n    }\n  };\n\n  const removeBox = (event, data, element) => {\n    const { target, dispatch } = data;\n    const { id } = element.firstChild;\n    dispatch({ type: 'removeBox', payload: { id } });\n  };\n  const dispatch = useDispatch();\n\n  return (\n    <ContextMenu id={NodeMenuId} className=\"context-menu\" hideOnLeave>\n      <MenuItem onClick={removeBox} data={{ dispatch }} key={'remove'}>\n        {'Remove Box'}\n      </MenuItem>\n\n      {Object.keys(LAYOUT).map((book) => (\n        <SubMenu title={book} key={book}>\n          {LAYOUT[book].map((label) => (\n            <SubMenu title={label} key={label}>\n              {MODES[label].types.map((type) => (\n                <MenuItem\n                  onClick={handleClick}\n                  data={{ label, type, dispatch }}\n                  key={type}\n                >\n                  {type}\n                </MenuItem>\n              ))}\n            </SubMenu>\n          ))}\n        </SubMenu>\n      ))}\n    </ContextMenu>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { convertFromRaw, Editor, EditorState } from 'draft-js';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport React from 'react';\nimport Draggable from 'react-draggable';\nimport { NodeMenuId, MODES } from './GraphContextMenu';\nimport './css/Nodes.css';\nimport HistoricalStyles from '../../config/HistoricalStyles';\n\nconst Node = (props) => {\n  const { id } = props;\n  const dispatch = useDispatch();\n  const position = useSelector((state) => state.blocks.present.positions[id]);\n  const txt = useSelector((state) => state.blocks.present.txts[id]);\n  const label = useSelector((state) => state.blocks.present.graph.boxes[id]);\n  const selectedNode = useSelector(\n    (state) => state.blocks.present.graph.selectedNode\n  );\n  let style = {};\n  if (selectedNode === id) {\n    style = { borderColor: 'gold', backgroundColor: 'gold' };\n  }\n\n  // determines style for border of node\n  let border = '';\n  if (label) {\n    border = MODES[label].color;\n    style.borderColor = border;\n  } else {\n    border = '';\n  }\n  const handleDrag = (e, d) => {\n    dispatch({\n      type: 'updatePosition',\n      payload: {\n        id,\n        x: d.lastX + d.deltaX,\n        y: d.lastY + d.deltaY,\n      },\n    });\n  };\n  const [x, y] = position;\n  return (\n    <ContextMenuTrigger id={NodeMenuId} key={id} holdToDisplay={-1}>\n      <Draggable\n        onStop={handleDrag}\n        onDrag={handleDrag}\n        key={id}\n        defaultPosition={{ x, y }}\n        position={{ x, y }}\n      >\n        <fieldset className=\"node\" id={id} style={style}>\n          <legend className=\"label\" style={{ color: border }}>\n            {label}\n          </legend>\n          <Editor\n            readOnly\n            customStyleMap={HistoricalStyles}\n            editorState={EditorState.createWithContent(\n              convertFromRaw(JSON.parse(txt))\n            )}\n            onChange={() => {}}\n          />\n        </fieldset>\n      </Draggable>\n    </ContextMenuTrigger>\n  );\n};\n\nexport default function Nodes() {\n  const order = useSelector((state) => state.blocks.present.order);\n  const nodes = order.map((id) => <Node id={id} key={id} />);\n  return nodes;\n}\n","import { useSelector } from 'react-redux';\nimport React from 'react';\nimport Xarrow from 'react-xarrows';\n\nexport default function SequentialPath() {\n  const order = useSelector((state) => state.blocks.present.order);\n  // triggers re-render on state change\n  const positions = useSelector((state) => state.blocks.present.positions);\n\n  const links = {};\n  for (let i = 0; i < order.length - 1; i += 1) {\n    links[order[i]] = order[i + 1];\n  }\n\n  const path = [];\n  Object.keys(links).forEach((key) =>\n    path.push(\n      <Xarrow\n        key={key}\n        start={key}\n        end={links[key]}\n        strokeWidth={1}\n        lineColor=\"grey\"\n        headColor=\"grey\"\n        dashness\n      />\n    )\n  );\n  return path;\n}\n","import React from 'react';\nimport { ContextMenu, MenuItem } from 'react-contextmenu';\nimport { useDispatch } from 'react-redux';\n\nexport const ConnectionMenuId = 'connection_menu';\n\nexport default function ConnectionContextMenu() {\n  // updates State and changes cursor color\n  const handleClick = (event, data, element) => {\n    const { target, reducerType, dispatch } = data;\n    const { id } = target.parentElement.parentElement;\n    dispatch({ type: reducerType, payload: {id}  });\n  };\n  const dispatch = useDispatch();\n  return (\n    <ContextMenu id={ConnectionMenuId}>\n        <MenuItem\n          onClick={handleClick}\n          data={{reducerType: \"deleteConnection\", dispatch: dispatch}}\n          key='deleteConnection'\n          >\n          {\"Delete\"}\n        </MenuItem>\n    </ContextMenu>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction returnNodeParent(target) {\n  // returns closest parent of target if\n  // if parent is class 'node' or 'react-contextmenu-item\n  if (target === document) {\n    return false;\n  }\n  if (target.classList.contains('react-contextmenu-item')) {\n    return target;\n  }\n  if (target.classList.contains('node')) {\n    return target;\n  }\n  return returnNodeParent(target.parentNode);\n}\n\nfunction onClick(event, graph, dispatch) {\n  const target = returnNodeParent(event.target);\n\n  if (target === false) {\n    dispatch({ type: 'resetMode' });\n  } else if (target.classList[0] === 'react-contextmenu-item') {\n    // Entered Connection Mode\n  } else if (target.classList[0] === 'node') {\n    if (graph.selectedNode !== null) {\n      // console.log('In Connection Mode');\n      if (graph.selectedNode === target.id) {\n        // console.log('Same ID Clicked');\n      } else if (graph.connections.includes([graph.selectedNode, target.id])) {\n        // console.log('Connection Already in Present');\n      } else {\n        dispatch({\n          type: 'addConnection',\n          payload: {\n            connection: [graph.selectedNode, target.id, graph.mode],\n          },\n        });\n      }\n    }\n    dispatch({ type: 'resetMode' });\n  }\n}\n\nexport default function ConnectionListener() {\n  const graph = useSelector((state) => state.blocks.present.graph);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    function f(e) {\n      return onClick(e, graph, dispatch);\n    }\n    document.addEventListener('click', f);\n    return () => {\n      document.removeEventListener('click', f);\n    };\n  }, [graph]);\n  return <></>;\n}\n","import { useSelector } from 'react-redux';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport React from 'react';\nimport Xarrow from 'react-xarrows';\nimport { MODES } from './GraphContextMenu';\nimport { ConnectionMenuId } from './ConnectionContextMenu';\nimport './css/Connections.css';\n\nexport default function NodeConnections() {\n  const connections = useSelector(\n    (state) => state.blocks.present.graph.connections\n  );\n  // triggers re-render on state change\n  const positions = useSelector((state) => state.blocks.present.positions);\n  const anchors = {};\n  return connections.map((connection) => {\n    const start = connection[0];\n    const end = connection[1];\n    const mode = connection[2];\n\n    anchors.hasOwnProperty(start)\n      ? (anchors[start] += 1)\n      : (anchors[start] = 1);\n    anchors.hasOwnProperty(end) ? (anchors[end] += 1) : (anchors[end] = 1);\n    // start and end offsets begin at index 1 (leaves room for sequential path)\n\n    // console.log(anchors);\n    let sideStartOffset = anchors[start];\n    if (sideStartOffset % 2 === 0) {\n      sideStartOffset /= -2;\n    } else {\n      sideStartOffset += 1;\n      sideStartOffset /= 2;\n    }\n    let sideEndOffset = anchors[end];\n    if (sideEndOffset % 2 === 0) {\n      sideEndOffset /= -2;\n    } else {\n      sideEndOffset += 1;\n      sideEndOffset /= 2;\n    }\n    // console.log(anchors)\n\n    const longStartOffset = anchors[start];\n\n    const yspacing = 10;\n    const xspacing = 10;\n    console.log(mode, MODES);\n\n    return (\n      <ContextMenuTrigger id={ConnectionMenuId} key={start + end + mode}>\n        <Xarrow\n          key={start + end + mode}\n          id={start + end + mode}\n          start={start}\n          end={end}\n          startAnchor={[\n            {\n              position: 'right',\n              offset: { bottomness: yspacing * sideStartOffset, rightness: 0 },\n            },\n            {\n              position: 'left',\n              offset: { bottomness: yspacing * sideStartOffset, rightness: 0 },\n            },\n            {\n              position: 'bottom',\n              offset: { bottomness: 0, rightness: xspacing * sideStartOffset },\n            },\n            {\n              position: 'top',\n              offset: { bottomness: 0, rightness: xspacing * sideStartOffset },\n            },\n          ]}\n          endAnchor={[\n            {\n              position: 'right',\n              offset: { bottomness: yspacing * sideEndOffset, rightness: 0 },\n            },\n            {\n              position: 'left',\n              offset: { bottomness: yspacing * sideEndOffset, rightness: 0 },\n            },\n            {\n              position: 'bottom',\n              offset: { bottomness: 0, rightness: xspacing * sideEndOffset },\n            },\n            {\n              position: 'top',\n              offset: { bottomness: 0, rightness: xspacing * sideEndOffset },\n            },\n          ]}\n          strokeWidth={3}\n          headSize={5}\n          lineColor={MODES[mode].color}\n          headColor={MODES[mode].color}\n          arrowBodyProps={{ className: 'arrow_body' }}\n          arrowHeadProps={{ className: 'arrow_head' }}\n          SVGcanvasProps={{ className: 'svg' }}\n          // path=\"grid\"\n          label={{\n            middle: (\n              <div\n                className=\"arrow_label\"\n                style={{\n                  color: MODES[mode].color,\n                  transform: 'translate(100%, 0%)',\n                }}\n              >\n                {mode[0]}\n              </div>\n            ),\n          }}\n        />\n      </ContextMenuTrigger>\n    );\n  });\n}\n","import React from 'react';\nimport './css/Graph.css';\nimport Nodes from './Nodes';\nimport SequentialPath from './SequentialPath';\nimport GraphContextMenu from './GraphContextMenu';\nimport ConnectionContextMenu from './ConnectionContextMenu';\nimport ConnectionListener from './ConnectionListener';\nimport NodeConnections from './Connections';\n\nexport default function Graph() {\n  return (\n    <>\n      <div className=\"canvas\">\n        <Nodes />\n        <SequentialPath />\n        <NodeConnections />\n      </div>\n      <GraphContextMenu />\n      <ConnectionContextMenu />\n      <ConnectionListener />\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './DownloadButton.css';\n\nfunction downloadObjectAsJson(exportObj, exportName) {\n  let dataStr =\n    'data:text/json;charset=utf-8,' +\n    encodeURIComponent(JSON.stringify(exportObj));\n  let downloadAnchorNode = document.createElement('a');\n  downloadAnchorNode.setAttribute('href', dataStr);\n  downloadAnchorNode.setAttribute('download', exportName + '.json');\n  document.body.appendChild(downloadAnchorNode); // required for firefox\n  downloadAnchorNode.click();\n  downloadAnchorNode.remove();\n}\n\nexport function SaveState() {\n  const s = useSelector((state) => state.blocks.present);\n  // const positions = useSelector((state) => state.blocks.present.positions);\n  const [name, setName] = useState('');\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    downloadObjectAsJson(s, name);\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        {'Save File '}\n        <input\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n      </label>\n      <input type=\"submit\" value=\"Save\" />\n    </form>\n  );\n}\n\nexport function LoadState() {\n  const dispatch = useDispatch();\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    // console.log(file.name);\n    const file = document.getElementById('file').files[0];\n    if (!file) {\n      return;\n    }\n    let reader = new FileReader();\n    reader.readAsText(file);\n    reader.onload = function () {\n      const state = JSON.parse(reader.result);\n      console.log(state);\n      dispatch({\n        type: 'loadState',\n        payload: {\n          state,\n        },\n      });\n    };\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"file\" id=\"file\" name=\"file\" className=\"inputfile\" />\n      {/* <label for=\"file\">Load File:</label> */}\n      <input type=\"submit\" value=\"Load\" />\n    </form>\n  );\n}\n","import './App.css';\nimport React from 'react';\nimport Blocks from './features/blocks/Blocks';\nimport HeaderButtons from './features/HeaderButtons/HeaderButtons';\nimport Graph from './features/graph/Graph';\nimport { SaveState, LoadState } from './features/HeaderButtons/DownloadButton';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"top\">\n        <div className=\"load_save_buttons\">\n          <SaveState />\n          <LoadState />\n        </div>\n        <div className=\"right_buttons\">\n          <HeaderButtons />\n        </div>\n      </div>\n      <div className=\"bottom\">\n        <div className=\"left_panel\">\n          <Graph />\n        </div>\n        <div className=\"right_panel\">\n          <Blocks />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { nanoid } from '@reduxjs/toolkit';\nimport {\n  EditorState,\n  SelectionState,\n  convertToRaw,\n  convertFromRaw,\n  Modifier,\n} from 'draft-js';\n\nconst initialState = {\n  caret: -1,\n  activeId: 'id1',\n  order: ['id1'],\n  txts: {\n    id1: JSON.stringify(\n      convertToRaw(EditorState.createEmpty().getCurrentContent())\n    ),\n  },\n  splits: { id1: { slice1: 0, slice2: 0 } },\n  selections: {\n    id1: null,\n  },\n  notes: { id1: '' },\n  views: { id1: false },\n  positions: { id1: [0, 0] },\n  graph: { connections: [], mode: null, selectedNode: null, boxes: {} },\n};\n\nexport default function BlocksReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'loadState':\n      return action.payload.state;\n    case 'updateId':\n      return {\n        ...state,\n        activeId: action.payload.id,\n      };\n    case 'updateText':\n      return {\n        ...state,\n        txts: { ...state.txts, [action.payload.id]: action.payload.txt },\n        splits: { ...state.splits, [action.payload.id]: action.payload.split },\n        selections: {\n          ...state.selections,\n          [action.payload.id]: action.payload.selection,\n        },\n      };\n    case 'updateSelection':\n      return {\n        ...state,\n        activeId: action.payload.id,\n        splits: { ...state.splits, [action.payload.id]: action.payload.split },\n        selections: {\n          ...state.selections,\n          [action.payload.id]: action.payload.selection,\n        },\n      };\n    case 'splitText': {\n      // Initialize ids, texts, and order\n      const id1 = action.payload.id;\n      const index = state.order.indexOf(id1);\n      const id2 = nanoid();\n      const textOne = state.splits[id1]['slice1'];\n      const textTwo = state.splits[id1]['slice2'];\n      const newOrder = [...state.order];\n      newOrder.splice(index + 1, 0, id2);\n\n      // Set new position of node in graph\n      const textOneLength = convertFromRaw(JSON.parse(textOne)).getPlainText()\n        .length;\n      const textTwoLength = convertFromRaw(JSON.parse(textTwo)).getPlainText()\n        .length;\n\n      const OriginalNode1Height = document\n        .getElementsByClassName('node')\n        .namedItem(id1).clientHeight;\n      const newNode1Height =\n        (OriginalNode1Height * textOneLength) / (textOneLength + textTwoLength);\n\n      const pos = state.positions[id1];\n      const newPosition = [pos[0], pos[1] + newNode1Height + 50];\n\n      // Updates new node position if new node is on top of existing node\n      const currentPositions = Object.values(state.positions);\n      let i = 0;\n      while (\n        currentPositions.filter(\n          (p) => JSON.stringify(p) === JSON.stringify(newPosition)\n        ).length > 0\n      ) {\n        i += 1;\n        newPosition[0] += 15;\n        newPosition[1] += 15;\n        if (i > 5) {\n          // Stops after five attempts to change position\n          break;\n        }\n      }\n\n      // Create and Return new state\n      return {\n        ...state,\n        activeId: id2,\n        order: newOrder,\n        txts: {\n          ...state.txts,\n          [id1]: textOne,\n          [id2]: textTwo,\n        },\n        splits: {\n          ...state.splits,\n          [id1]: { slice1: textOne, slice2: textOne },\n          [id2]: { slice1: textTwo, slice2: textTwo },\n        },\n        notes: { ...state.notes, [id2]: '' },\n        views: { ...state.views, [id2]: false },\n        positions: { ...state.positions, [id2]: newPosition },\n      };\n    }\n    case 'mergeText': {\n      const id2 = action.payload.id;\n      const idx = state.order.indexOf(id2);\n      if (idx === 0) {\n        return state; // not possible to merge up first block\n      }\n      const id1 = state.order[idx - 1];\n      const newOrder = [...state.order];\n      newOrder.splice(idx, 1);\n\n      // Move merged connections\n      let newConnections = state.graph.connections\n        .map((connection) =>\n          connection.map((id) => {\n            if (id === id2) {\n              return id1;\n            }\n            return id;\n          })\n        )\n        .filter((connection) => connection[0] !== connection[1]);\n      // Remove Duplicate connections\n      const s = new Set(newConnections.map((array) => array.join()));\n      newConnections = [...s].map((array) => array.split(','));\n\n      // Creates Merged Content State\n      const contentState1 = convertFromRaw(JSON.parse(state.txts[id1]));\n      const contentState2 = convertFromRaw(JSON.parse(state.txts[id2]));\n      const selectionState2 = EditorState.createWithContent(\n        contentState2\n      ).getSelection();\n      const firstBlockKey = selectionState2.getAnchorKey();\n      const insertionSelectionState = SelectionState.createEmpty(\n        'blockkey'\n      ).merge({\n        anchorKey: firstBlockKey,\n        anchorOffset: 0,\n        focusKey: firstBlockKey,\n        focusOffset: 0,\n      });\n      const mergedContent = Modifier.replaceWithFragment(\n        contentState2,\n        insertionSelectionState,\n        contentState1.getBlockMap()\n      );\n\n      return {\n        ...state,\n        activeId: id1,\n        order: newOrder,\n        txts: {\n          ...state.txts,\n          [id1]: JSON.stringify(convertToRaw(mergedContent)),\n        },\n        splits: {\n          ...state.splits,\n          [id1]: { slice1: 0, slice2: 0 },\n        },\n        notes: {\n          ...state.notes,\n          [id1]: state.notes[id1] + state.notes[id2],\n        },\n        graph: { ...state.graph, connections: newConnections },\n      };\n    }\n    case 'toggleNote': {\n      const { id } = action.payload;\n      return { ...state, views: { ...state.views, [id]: !state.views[id] } };\n    }\n    case 'updateNote': {\n      const { id } = action.payload;\n      const e = document.activeElement;\n      return { ...state, notes: { ...state.notes, [id]: e.value } };\n    }\n    case 'updatePosition': {\n      const { id, x, y } = action.payload;\n      return { ...state, positions: { ...state.positions, [id]: [x, y] } };\n    }\n    case 'setMode':\n      return {\n        ...state,\n        graph: {\n          ...state.graph,\n          mode: action.payload.label, // bad variables names\n          selectedNode: action.payload.id,\n        },\n      };\n    case 'resetMode':\n      return {\n        ...state,\n        graph: { ...state.graph, mode: null, selectedNode: null },\n        mode: '',\n        id: null,\n      };\n    case 'setBox': {\n      const { label, id } = action.payload;\n      return {\n        ...state,\n        graph: { ...state.graph, boxes: { ...state.graph.boxes, [id]: label } },\n      };\n    }\n    case 'removeBox': {\n      const { id } = action.payload;\n      const boxes = { ...state.graph.boxes };\n      delete boxes[id];\n      return {\n        ...state,\n        graph: { ...state.graph, boxes: { ...boxes } },\n      };\n    }\n    case 'addConnection':\n      // Verify that connection does not already exist\n      if (\n        state.graph.connections.filter(\n          (c) => c.toString() === action.payload.connection.toString()\n        ).length > 0 &&\n        state.graph.connections.length > 0\n      ) {\n        return state;\n      }\n      // Add connection\n      return {\n        ...state,\n        graph: {\n          ...state.graph,\n          connections: [...state.graph.connections, action.payload.connection],\n        },\n      };\n    case 'deleteConnection': {\n      const newConnections = state.graph.connections.filter(\n        (connection) =>\n          connection[0] + connection[1] + connection[2] !== action.payload.id\n      );\n      return {\n        ...state,\n        graph: { ...state.graph, connections: newConnections },\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const ArgButtonsSlice = createSlice({\n  name: 'args',\n  initialState: {\n    connection_color: null, // color of current selected arrow type\n    tail_selected: false, // specifies if prior click was on valid node\n    tail_id: null, // id of prior node click\n  },\n  reducers: {\n    updateColor: (state, action) => {\n      state.connection_color = action.color;\n      state.tail_selected = false;\n      state.tail_id = null;\n    },\n    updateTail: (state, action) => {\n      state.tail_selected = true;\n      state.tail_id = action.id;\n    },\n    resetToDragging: (state) => {\n      state.connection_color = null;\n      state.tail_selected = false;\n      state.tail_id = null;\n    },\n  },\n});\n\nexport const {\n  updateColor,\n  updateTail,\n  resetToDragging,\n} = ArgButtonsSlice.actions;\nexport default ArgButtonsSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport undoable, { excludeAction } from 'redux-undo';\nimport blocksReducer from '../features/blocks/BlocksReducer';\nimport ArgsButtonsReducer from '../features/ArgButtons/ArgButtonsSlice';\n\nexport default configureStore({\n  reducer: {\n    blocks: undoable(blocksReducer, {\n      filter: excludeAction([\n        'updateId',\n        'updateCaret',\n        'updatePosition',\n        'toggleNote',\n        'updateNote',\n        'resetMode',\n        'setMode',\n        'updateSelection',\n      ]),\n    }),\n    args: ArgsButtonsReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './app/store';\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}